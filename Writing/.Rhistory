head(df)
map_four_bidding <- df %>% select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
head(map_four_bidding)
View(map_four_bidding)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if(EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0){
1
}else if(EDG_4 > 0 & ELG_4 = 0 & EW_4 > 0){
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if(EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0){
1
}else if(EDG_4 > 0 & ELG_4 =+ 0 & EW_4 > 0){
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if(EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0){
1
}else if(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0){
1
}else if(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0){
1
}else{
0
}
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 == 0){
1
}else if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 == 0 & map_four_bidding$EW_4 > 0){
1
}else if(map_four_bidding$EDG_4 == 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 > 0){
1
}else{
0
}
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.bid.two.districts = sum(Two.districts.only),
pct.bid.two = n.bid.two.districts/n.records)
View(map_four_bidding)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 == 0){
1
}else if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 == 0 & map_four_bidding$EW_4 > 0){
1
}else if(map_four_bidding$EDG_4 == 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 > 0){
1
}else if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 > 0){
0
}else if(map_four_bidding$EDG_4 == 0 & map_four_bidding$ELG_4 == 0 & map_four_bidding$EW_4 == 0){
0
}else{
0
}
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.bid.two.districts = sum(Two.districts.only),
pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if((map_four_bidding$EDG_4 > 0) & (map_four_bidding$ELG_4 > 0) & (map_four_bidding$EW_4 == 0)){
1
}else if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 == 0 & map_four_bidding$EW_4 > 0){
1
}else if(map_four_bidding$EDG_4 == 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 > 0){
1
}else if(map_four_bidding$EDG_4 > 0 & map_four_bidding$ELG_4 > 0 & map_four_bidding$EW_4 > 0){
0
}else if(map_four_bidding$EDG_4 == 0 & map_four_bidding$ELG_4 == 0 & map_four_bidding$EW_4 == 0){
0
}else{
0
}
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.bid.two.districts = sum(Two.districts.only),
pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if(
((map_four_bidding$EDG_4 > 0) & (map_four_bidding$ELG_4 > 0) & (map_four_bidding$EW_4 == 0))|
((map_four_bidding$EDG_4 > 0) & (map_four_bidding$ELG_4 == 0) & (map_four_bidding$EW_4 > 0))|
((map_four_bidding$EDG_4 == 0) & (map_four_bidding$ELG_4 > 0) & (map_four_bidding$EW_4 > 0))
){
1
}else{
0
}
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.bid.two.districts = sum(Two.districts.only),
pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding$Two.districts.only <- if((map_four_bidding$EDG_4 == 0) & (map_four_bidding$ELG_4 == 0) & (map_four_bidding$EW_4 == 0)){
1
}else{
0
}
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.bid.two.districts = sum(Two.districts.only),
pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = if(EDG_4 == 0 & ELG_4 == 0 & map_four_bidding$EW_4 == 0){
1
}else{
0
})
# Want count # of ppl bidding 2/3 districts and # of ppl total
# summarize(map_four_bidding, n.records = n(),
#           n.bid.two.districts = sum(Two.districts.only),
#           pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = if(as.numeric(EDG_4) == 0 & as.numeric(ELG_4) == 0 & as.numeric(EW_4 == 0)){
1
}else{
0
})
# Want count # of ppl bidding 2/3 districts and # of ppl total
# summarize(map_four_bidding, n.records = n(),
#           n.bid.two.districts = sum(Two.districts.only),
#           pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = ifelse(as.numeric(EDG_4) == 0 & as.numeric(ELG_4) == 0 & as.numeric(EW_4 == 0)1,0))
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = ifelse(as.numeric(EDG_4) == 0 & as.numeric(ELG_4) == 0 & as.numeric(EW_4 == 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
# summarize(map_four_bidding, n.records = n(),
#           n.bid.two.districts = sum(Two.districts.only),
#           pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = ifelse(EDG_4 == 0 & ELG_4 == 0 & EW_4 == 0,1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
# summarize(map_four_bidding, n.records = n(),
#           n.bid.two.districts = sum(Two.districts.only),
#           pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
# summarize(map_four_bidding, n.records = n(),
#           n.bid.two.districts = sum(Two.districts.only),
#           pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.bid.two.districts = sum(Two.districts.only),
pct.bid.two = n.bid.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.two.districts = sum(two.bids),
pct.bid.two = n.two.districts/n.records)
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.two.districts = sum(two.bids),
pct.bid.two = n.two.districts/n.records)
head(df_clean)
avg_by_map_district <- group_by(df_clean, Map, District)
View(avg_by_map_district)
View(avg.bid.map.district)
# get some interesting tables
avg.bid.map.district <- df_clean %>% group_by(Player, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
head(avg.bid.map.district)
View(df_clean)
df_stage_four <- df_clean %>% filter(Period >= 25 & Period < 28)
head(mode_df)
mode_df$gerry <- ifelse((Player == 'A' & mode.map == 5)|(Player == 'B' & mode.map == 1),1,0)
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
mode_df
pct.gerry <- sum(gerry)/64
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
pct.gerry <- sum(mode_df$gerry)/64
pct.gerry
sum(mode_df$gerry)
pct.gerry
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
sum(mode_df$gerry)
pct.gerry <- sum(mode_df$gerry)/64
pct.gerry
stage_2 <- stage_2 %>% mutate(gerry = ifelse((Player == 'A' & Map_Selection == 5)|(Player == 'B' & Map_Selection == 1),1,0))
pct.gerry.2 <- sum(stage_2$gerry)/nrow(stage_2)
pct.gerry.2
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('./images/avg_bids.png')
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count
sum(by_map_selection_count$n)
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- by_map_selection_count$n/sum(by_map_selection_count$n)
by_map_selection_count
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- round((by_map_selection_count$n/sum(by_map_selection_count$n))*100, 2)
by_map_selection_count
View(df)
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- round((by_map_selection_count$n/sum(by_map_selection_count$n))*100, 0)
by_map_selection_count
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(dplyr)
# read in all data files for sessions 1 through 8
for(i in 1:8) {
x <- read_excel(paste("Cleaned_Raw_Session_0", i, ".xlsx", sep = "")) %>% dplyr::select(
Session, Period, Subject, Player, LType, Map_Selection = Map, EDG5:EW1, TE1:TE5
)
nam <- paste("df", i, sep = "_")
assign(nam, x)
}
# combine data vertically
df <- rbind(df_1, df_2, df_3, df_4, df_5, df_6, df_7, df_8)
# library(tidyr)
# long_df <- df %>% gather(District, Effort, EDG5:EW1)
df <- df %>% rename(
EDG_5 = EDG5, EDG_4 = EDG4, EDG_3 = EDG3, EDG_2 = EDG2, EDG_1 = EDG1,
ELG_5 = ELG5, ELG_4 = ELG4, ELG_3 = ELG3, ELG_2 = ELG2, ELG_1 = ELG1,
EW_5  = EW5, EW_4  = EW4, EW_3  = EW3, EW_2  = EW2, EW_1  = EW1,
TE_5 = TE5, TE_4 = TE4, TE_3 = TE3, TE_2 = TE2, TE_1 = TE1
)
library(tidyr)
long_df <- df %>% dplyr::select(Session, Period, Subject, Player, LType, EDG_5:EW_1) %>% gather(District, Effort, EDG_5:EW_1)
long_df_map <- data.frame(lapply(long_df, function(x) {
gsub("EDG5", "EDG_5", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EDG4", "EDG_4", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EDG3", "EDG_3", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EDG2", "EDG_2", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EDG1", "EDG_1", x)
}))
##########################
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("ELG5", "ELG_5", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("ELG4", "ELG_4", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("ELG3", "ELG_3", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("ELG2", "ELG_2", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("ELG1", "ELG_1", x)
}))
##########################
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EW5", "EW_5", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EW4", "EW_4", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EW3", "EW_3", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EW2", "EW_2", x)
}))
long_df_map <- data.frame(lapply(long_df_map, function(x) {
gsub("EW1", "EW_1", x)
}))
##########################
# Orderly data with district, Map, and effort amount for each subject each period in each session
df_clean <- long_df_map %>% separate(District, c("District", "Map"))
# get some interesting tables
avg.bid.map.district <- df_clean %>% group_by(Player, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.by.session <- df_clean %>% group_by(Session) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.session.map.district <- df_clean %>% group_by(Session, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
# recall: periods 15 - 24 are Stage 1, 25-27 are Stage 2, and 28 is Stage 3
avg.bid.by.period <- df_clean %>% group_by(Period, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
# Let's consider just the competitive districts
df_comp <- df_clean %>% subset(District == "EW" | (District==c("EDG","ELG") & Map == 4))
avg.bid.comp.dist <- df_comp %>% group_by(Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.comp.session <- df_comp %>% group_by(Session) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.comp.session.map.dist <- df_comp %>% group_by(Session, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
##
# install.packages("ggpubr")
library(ggpubr)
theme_set(theme_pubr())
# Equilibrium effort: .25v
g1.1 <- ggplot(df, aes(x = EDG_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80) +
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 1")
g1.2 <- ggplot(df, aes(x = ELG_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80) +
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 1")
g1.3 <- ggplot(df, aes(x = EW_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 1")
figure <- ggarrange(g1.1, g1.2, g1.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
# Equilibrium effort: .25v
g2.1 <- ggplot(df, aes(x = EDG_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 2")
g2.2 <- ggplot(df, aes(x = ELG_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 2")
g2.3 <- ggplot(df, aes(x = EW_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 2")
figure.2 <- ggarrange(g2.1, g2.2, g2.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.2
# Equilibrium effort: 3/8 v
g3.1 <- ggplot(df, aes(x = EDG_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 3")
g3.2 <- ggplot(df, aes(x = ELG_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 3")
g3.3 <- ggplot(df, aes(x = EW_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 60, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 3")
figure.3 <- ggarrange(g3.1, g3.2, g3.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.3
# Equilibrium effort: .125v per district
g4.1 <- ggplot(df, aes(x = EDG_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 4")
g4.2 <- ggplot(df, aes(x = ELG_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 4")
g4.3 <- ggplot(df, aes(x = EW_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 4")
figure.4 <- ggarrange(g4.1, g4.2, g4.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.4
# Equilibrium effort: .25v
g5.1 <- ggplot(df, aes(x = EDG_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 5")
g5.2 <- ggplot(df, aes(x = ELG_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 5")
g5.3 <- ggplot(df, aes(x = EW_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 5")
figure.5 <- ggarrange(g5.1, g5.2, g5.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.5
stage_2 <- df %>% subset(Period > 24 & Period < 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
library(raster)
mode_df <- stage_2 %>% group_by(subject.id, Player) %>%
summarise(mode.map = modal(Map_Selection, ties = 'random'))
map_mode_bar <- ggplot(mode_df, aes(x=mode.map, fill = Player, color = Player)) +
geom_bar(width = 0.5, alpha = 0.5, position="identity")
map_mode_bar + ggtitle("Modal Map Selection in Stage 2")
# map_mode_hist <- ggplot(mode_df, aes(x=mode.map, fill = Player, color = Player)) +
#   geom_histogram(alpha = 0.5, position="identity")
# map_mode_hist
# sum(mode_df$mode.map == 1)
# Create "last_period" as an empty vector and extract period 28 from each sessions
last_period <-subset(df, Period=="28")
last_period$Map_Selection <- as.factor(last_period$Map_Selection)
last_period$Bug <- ifelse(last_period$Player == last_period$LType, "No", "Yes")
ggplot(last_period, aes(x=Map_Selection)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
ggplot(last_period, aes(x=Map_Selection, fill = Player, color = Player)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
df_clean <- df_clean %>% mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
df_all_cdf <- df_clean %>% dplyr::select(Period, subject.id, Player, District, Map, Effort)
only.4 <- df_all_cdf %>% filter(Map == 4) # %>% group_by(subject.id, District, Effort)
ggplot(only.4, aes(x = as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=District)) +
geom_vline(xintercept = 10, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Map 4") + guides(size = F)
ggplot(df_all_cdf %>% filter(Map == 4), aes(x = as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 10, linetype = "dashed") + xlim(0,80)+
facet_wrap(~District)+
ggtitle("Map 4 by District") +
guides(size = F)
df_map_2 <- df_clean %>%
filter(Map == 2) %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort)
df_map_3 <- df_clean %>%
filter(Map == 3) %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort)
par(mfrow = c(1, 2))
# Bidding in Map 2 White District
ggplot(df_map_2 %>% filter(District == "EW"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated Map 2: White District") +
guides(size = F)
# Bidding in Map 3 White District
ggplot(df_map_3 %>% filter(District == "EW"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 30, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated Map 3: White District") +
guides(size = F)
dissag.df.overlay <- df_clean %>%
filter((Map == 1 | Map == 5)&District == "EW") %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv", "Dis.adv"))
par(mfrow = c(1, 2))
ggplot(dissag.df.overlay %>% filter(Advantage == "Adv"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
ggtitle("Advantage Comparrison: White District") + xlim(0,80)+
geom_vline(xintercept = 20, linetype = "dashed") +
guides(size = F)
ggplot(dissag.df.overlay %>% filter(Advantage == "Dis.adv"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
ggtitle("Disadvantage Comparrison: White District") + xlim(0,80)+
geom_vline(xintercept = 20, linetype = "dashed") +
guides(size = F)
ggplot(dissag.df.overlay, aes(x=as.numeric(Effort), size = "1")) +
scale_color_manual(values = c("black","green")) +
stat_ecdf(aes(colour=Advantage)) +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated: Advantaged vs Disadvantaged") +
guides(size = F) + scale_fill_brewer()
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.two.districts = sum(two.bids),
pct.bid.two = n.two.districts/n.records)
head(avg.bid.map.district)
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
sum(mode_df$gerry)
pct.gerry <- sum(mode_df$gerry)/64
pct.gerry
stage_2 <- stage_2 %>% mutate(gerry = ifelse((Player == 'A' & Map_Selection == 5)|(Player == 'B' & Map_Selection == 1),1,0))
pct.gerry.2 <- sum(stage_2$gerry)/nrow(stage_2)
pct.gerry.2
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- round((by_map_selection_count$n/sum(by_map_selection_count$n))*100, 0)
by_map_selection_count
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
# Want count # of ppl bidding 2/3 districts and # of ppl total
summarize(map_four_bidding, n.records = n(),
n.two.districts = sum(two.bids),
pct.bid.two = n.two.districts/n.records)
map_four_bidding_variant <- map_four_bidding %>% mutate(three.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 > 0),1,0))
summarize(map_four_bidding_variant, n.records = n(),
n.three.districts = sum(three.bids),
pct.bid.three = n.three.districts/n.records)
# get some interesting tables
avg.bid.map.district <- df_clean %>% group_by(Player, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
view(avg.bid.map.district)
View(avg.bid.map.district)
