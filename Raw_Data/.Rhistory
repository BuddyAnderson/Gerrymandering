EDG_5 = EDG5, EDG_4 = EDG4, EDG_3 = EDG3, EDG_2 = EDG2, EDG_1 = EDG1,
ELG_5 = ELG5, ELG_4 = ELG4, ELG_3 = ELG3, ELG_2 = ELG2, ELG_1 = ELG1,
EW_5  = EW5, EW_4  = EW4, EW_3  = EW3, EW_2  = EW2, EW_1  = EW1,
TE_5 = TE5, TE_4 = TE4, TE_3 = TE3, TE_2 = TE2, TE_1 = TE1,
pEDG_5 = pEDG5, pEDG_4 = pEDG4, pEDG_3 = pEDG3, pEDG_2 = pEDG2, pEDG_1 = pEDG1,
pELG_5 = pELG5, pELG_4 = pELG4, pELG_3 = pELG3, pELG_2 = pELG2, pELG_1 = pELG1,
pEW_5  = pEW5, pEW_4  = pEW4, pEW_3  = pEW3, pEW_2  = pEW2, pEW_1  = pEW1
)
## Pick Which Sessions ##########################################
##                                                             ##
df <- df %>% filter(Session < 9, Period < 30)                  ##
peq_response <- df %>%                                         ##
filter(as.numeric(Period) == 29) %>%                         ##
dplyr::select(Session, Period, Subject,                      ##
PEQ_7, TimeSubmitPEQ7OK, PEQ_8) %>%            ##
mutate(subject.id =                                          ##
as.numeric(Session)*8-(8-as.numeric(Subject)))      ##
# ###############################################################
##---------------------------------------------------------------
##                  Restructure data                           --
##---------------------------------------------------------------
long_df <- df %>% dplyr::select(Session, Period, Subject, Player, Partner, LType, EDG_5:EW_1, pEDG_5:pEW_1) %>% gather(District, Effort, EDG_5:pEW_1)
df_clean <- long_df %>% separate(District, c("District", "Map")) %>% filter(!grepl("p", District))
df_clean %<>%
mutate(Session = as.numeric(Session),
Effort = as.numeric(Effort),
Subject = as.numeric(Subject),
Period = as.numeric(Period),
subject.id = Session*8-(8-Subject))
##---------------------------------------------------------------
##                  Table 2: District Stats                    --
##---------------------------------------------------------------
df_renamed_maps <- df_clean %>%
mutate(Effort = as.numeric(Effort)) %>%
filter(Period >= 15, Period <= 24) %>%
mutate(District.compare = ifelse((District == "EDG" & Player == 'A')|
(District == "ELG" & Player == 'B'),
"DG Player A to LG Player B",
ifelse((District == "ELG" & Player == 'A')|
(District == "EDG" & Player == 'B'),
"LG Player A to DG Player B",
"W for Both Players")),
Advantage = ifelse((Player == "A" & Map == 5)|
(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|
(Player == "A" & Map == 1),
"Dis.adv",
"fair")))
df_renamed_maps <- df_renamed_maps %>%
mutate(Adv.District.Names = ifelse((Map == 1 & District == "EDG" & Player == "B")|
(Map == 5 & District == "ELG" & Player == "A"),
"Two Partisan For",
ifelse((Map == 1 & District == "ELG" & Player == "B")|
(Map == 5 & District == "EDG" & Player == "A"),
"Three Partisan Against",
ifelse((Map == 1 & District == "EW" & Player == "B")|
(Map == 5 & District == "EW" & Player == "A"),
"One Partisan For",
"Error"))),
Disadv.District.Names = ifelse((Map == 1 & District == "EDG" & Player == "A")|
(Map == 5 & District == "ELG" & Player == "B"),
"Two Partisan Against",
ifelse((Map == 1 & District == "ELG" & Player == "A")|
(Map == 5 & District == "EDG" & Player == "B"),
"Three Partisan For",
ifelse((Map == 1 & District == "EW" & Player == "A")|
(Map == 5 & District == "EW" & Player == "B"),
"One Partisan Against",
"Error"))))
table_2_data <- df_renamed_maps %>%
filter(Period >= 15, Period <= 24) %>%
mutate(Fairness = ifelse((Player == "A" & Map == 5)|
(Player == "B" & Map == 1),
"Adv",
ifelse((Player == "B" & Map == 5)|
(Player == "A" & Map == 1),
"Dis.adv",
"fair")),
Map.new = ifelse(Map == 1 |Map == 5, "gerry", Map),
EffortWithNAs = ifelse(Effort == 0, NA, Effort),
District.compare = ifelse((Map == 1 & Player == "B")|
(Map == 5 & Player == "A"),
Adv.District.Names,
ifelse((Map == 1 & Player == "A")|
(Map == 5 & Player == "B"),
Disadv.District.Names,
District.compare))
)
table_2 <- table_2_data %>%
group_by(District.compare, Map.new, Fairness) %>%
summarize(pct.bid.zero = 100*round(sum(is.na(EffortWithNAs))/n(), 2),
avg.positive.bid = round(mean(EffortWithNAs, na.rm = T)),
avg.bid          = round(mean(Effort))) %>%
arrange(Fairness)
View(table_2)
##---------------------------------------------------------------
##                  Figure 3                                   --
##---------------------------------------------------------------
ts.each.map.each.dist <- df_clean %>%
dplyr::select(Session, Period, subject.id, Player, Map, District, Effort) %>%
mutate(District.compare = ifelse((District == "EDG" & Player == 'A')|(District == "ELG" & Player == 'B'),
"DG Player A to LG Player B",
ifelse((District == "ELG" & Player == 'A')|(District == "EDG" & Player == 'B'),
"LG Player A to DG Player B",
"W for Both Players")),
Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1),
"Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),
"Dis.adv",
"fair")))
ts.each.map.each.dist <- ts.each.map.each.dist %>%
mutate(Adv.District.Names = ifelse((Map == 1 & District == "EDG" & Player == "B")|
(Map == 5 & District == "ELG" & Player == "A"),
"Two Partisan For",
ifelse((Map == 1 & District == "ELG" & Player == "B")|
(Map == 5 & District == "EDG" & Player == "A"),
"Three Partisan Against",
ifelse((Map == 1 & District == "EW" & Player == "B")|
(Map == 5 & District == "EW" & Player == "A"),
"One Partisan For",
"Error"))),
Disadv.District.Names = ifelse((Map == 1 & District == "EDG" & Player == "A")|
(Map == 5 & District == "ELG" & Player == "B"),
"Two Partisan Against",
ifelse((Map == 1 & District == "ELG" & Player == "A")|
(Map == 5 & District == "EDG" & Player == "B"),
"Three Partisan For",
ifelse((Map == 1 & District == "EW" & Player == "A")|
(Map == 5 & District == "EW" & Player == "B"),
"One Partisan Against", "Error"))))
ts.each.map.each.dist <- ts.each.map.each.dist %>%
filter(Period >= 15, Period <= 24) %>%
mutate(Fairness = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Map.new = ifelse(Map == 1 |Map == 5, "gerry", Map),
EffortWithNAs = ifelse(Effort == 0, NA, Effort),
District.compare = ifelse((Map == 1 & Player == "B")|(Map == 5 & Player == "A"), Adv.District.Names,
ifelse((Map == 1 & Player == "A")|(Map == 5 & Player == "B"), Disadv.District.Names, District.compare))
)
ts.each.map.each.dist <- ts.each.map.each.dist %>%
mutate(Map = ifelse((Map == 1 & Player == "B")|(Map == 5 & Player =="A"), "Gerry Advantaged",
ifelse((Map == 1 & Player == "A")|(Map == 5 & Player == "B"),"Gerry Disadvantaged",
ifelse(Map == 2, "Symm_1_1",
ifelse(Map == 3, "Symm_1_3", "Symm_3_1")))),
District = ifelse(District == "EDG", "Dark Gray",
ifelse(District == "ELG", "Light Gray",
ifelse(District == "EW","White", "Wrong"))))
for.plot.of.ts.each.map.and.district <- ts.each.map.each.dist %>%
filter(Period >= 15, Period <=24) %>%
group_by(Period, Map, District.compare) %>%
summarise(avg.Effort = mean(Effort))
ts.by.map.and.district.gerry.adv <- for.plot.of.ts.each.map.and.district %>%
filter(Map == "Gerry Advantaged") %>%
ggplot(aes(x=Period, y=avg.Effort, group = District.compare, color = District.compare)) +
geom_line(aes(linetype=District.compare)) +
scale_linetype_manual(values=c("dotted", "solid","solid")) +
scale_color_manual(values=c('#333333', '#000000','#999999'))+
xlim(1,10) + ylim(0,60) + ylab("Expenditure") +
scale_x_discrete(breaks=c(1:10)) +
theme_bw() +  #drop a mostly white theme on for contrast
theme(panel.border = element_rect(fill=NA, colour = "black", size=1), legend.title = element_blank(), legend.position="none", text = element_text(size = 12))
ts.by.map.and.district.gerry.disadv <- for.plot.of.ts.each.map.and.district %>%
filter(Map == "Gerry Disadvantaged") %>%
ggplot(aes(x=Period, y=avg.Effort, group = District.compare, color = District.compare)) +
geom_line(aes(linetype=District.compare)) +
scale_linetype_manual(name = "District",labels = c("White", "Dark Gray", "Light Gray"), values=c("dotted", "solid","solid")) +
scale_color_manual(guide = F,labels = c("White", "Dark Gray", "Light Gray"), values=c('#333333', '#999999','#000000'))+
xlim(1,10) + ylim(0,60) + ylab("Expenditure") +
scale_x_discrete(breaks=c(1:10)) +
theme_bw() +  #drop a mostly white theme on for contrast
theme(panel.border = element_rect(fill=NA, colour = "black", size=1), legend.position="right", text = element_text(size = 12))
ts.by.map.and.district.sym11 <- for.plot.of.ts.each.map.and.district %>%
filter(Map == "Symm_1_1") %>%
ggplot(aes(x=Period, y=avg.Effort, group = District.compare, color = District.compare)) +
geom_line(aes(linetype=District.compare)) +
scale_linetype_manual(values=c("solid", "solid","dotted")) +
scale_color_manual(values=c('#000000', '#333333','#999999'))+
xlim(1,10) + ylim(0,60) + ylab("Expenditure") +
scale_x_discrete(breaks=c(1:10)) +
theme_bw() +  #drop a mostly white theme on for contrast
theme(panel.border = element_rect(fill=NA, colour = "black", size=1), legend.title = element_blank(), legend.position="none", text = element_text(size = 12))
ts.by.map.and.district.sym13 <- for.plot.of.ts.each.map.and.district %>%
filter(Map == "Symm_1_3") %>%
ggplot(aes(x=Period, y=avg.Effort, group = District.compare, color = District.compare)) +
geom_line(aes(linetype=District.compare)) +
scale_linetype_manual(values=c("solid", "solid","dotted")) +
scale_color_manual(values=c('#000000', '#333333','#999999'))+
xlim(1,10) + ylim(0,60) + ylab("Expenditure") +
scale_x_discrete(breaks=c(1:10)) +
theme_bw() +  #drop a mostly white theme on for contrast
theme(panel.border = element_rect(fill=NA, colour = "black", size=1), legend.title = element_blank(), legend.position="none", text = element_text(size = 12))
ts.by.map.and.district.sym13.alternative <- for.plot.of.ts.each.map.and.district %>%
filter(Map == "Symm_1_3") %>%
ggplot(aes(x=Period, y=avg.Effort, group = District.compare, color = District.compare)) +
geom_line(aes(linetype=District.compare)) +
scale_linetype_manual(values=c("solid", "solid","dotted")) +
scale_color_manual(values=c('#000000', '#333333','#999999'))+
xlim(1,10) + ylim(0,60) + ylab("Expenditure") +
scale_x_discrete(breaks=c(1:10)) +
theme_bw() +  #drop a mostly white theme on for contrast
theme(panel.border = element_rect(fill=NA, colour = "black", size=1), legend.title = element_blank(), legend.position="none", text = element_text(size = 12))
ts.by.map.and.district.sym31 <- for.plot.of.ts.each.map.and.district %>%
filter(Map == "Symm_3_1") %>%
ggplot(aes(x=Period, y=avg.Effort, group = District.compare, color = District.compare)) +
geom_line(aes(linetype=District.compare)) +
scale_linetype_manual(values=c("solid", "solid","dotted")) +
scale_color_manual(values=c('#000000', '#333333','#999999'))+
xlim(1,10) + ylim(0,60) + ylab("Expenditure") +
scale_x_discrete(breaks=c(1:10)) +
theme_bw() +  #drop a mostly white theme on for contrast
theme(panel.border = element_rect(fill=NA, colour = "black", size=1),legend.title = element_blank(), legend.position="none", text = element_text(size = 12))
##----------------------------------------------------------------------------------------------
##                  Table 3: Comparison of Total Expenditure Across Maps                      --
##----------------------------------------------------------------------------------------------
stage_1_regression_data <- df %>%
dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 15 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5) %>%
mutate(Session = as.numeric(Session),
Period = as.numeric(Period),
Subject = as.numeric(Subject),
Effort = as.numeric(Effort))
stage_1_regression_data <- stage_1_regression_data %>%
mutate(subject.id = as.factor(as.numeric(Session)*8-(8-as.numeric(Subject))),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0) # this is currently useless (all zeros)
)
# Run regressions
map_impact_stage_1 <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1,
data = stage_1_regression_data)
map_impact_stage_1_w_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id,
data = stage_1_regression_data)
map_impact_stage_1_w_learning <- lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1,
data = stage_1_regression_data %>% filter(Period >= 20))
map_impact_stage_1_w_learning_and_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id,
data = stage_1_regression_data %>%
filter(Period >= 20))
# Make Table 3
stargazer(map_impact_stage_1_w_FE,
map_impact_stage_1_w_learning_and_FE,
title = "Map Impact on Stage 1 Bidding",
column.labels = c("w/out learning", "w/ learning"),
label = "Tab:stage_1_first_sessions_with_and_without_learning_FE_CSE",
omit = "subject.id", single.row = T)
# Add the following clustered standard errors
map_impact_stage_1_w_FE_clustered <- lm.cluster(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id,
cluster = "Session",
data = stage_1_regression_data)
summary(map_impact_stage_1_w_FE_clustered)
test_sum <- summary(map_impact_stage_1_w_learning_and_FE_clustered)
# Hypothesis testing coefficients with NO LEARNING
linearHypothesis(map_impact_stage_1_w_FE, c("Adv = Disadv"))
# Hypothesis testing coefficients with NO LEARNING
linearHypothesis(map_impact_stage_1_w_FE, c("Adv = Disadv"))
# Hypothesis testing coefficients with NO LEARNING
linearHypothesis(map_impact_stage_1_w_FE_clustered, c("Adv = Disadv"))
##-------------------------------------------------------------
##            Tables 4, 5, and 6: Effect of Player B         --
##-------------------------------------------------------------
Map <- c("Sym_1_1", "Sym_1_3", "Sym_3_1", "Advantaged", "Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
adv_coef_cdfs.fixed.effects <- data.frame()
disadv_coef_cdfs.fixed.effects <- data.frame()
fair_coef_cdfs.fixed.effects <- data.frame()
adv_coef_cdfs.random.effects <- data.frame()
disadv_coef_cdfs.random.effects <- data.frame()
fair_coef_cdfs.random.effects <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player,
subject.id
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
# # Fixed effects; no clustered standard error; probably better way to do this
# temp_model.FE <- lm(Effort ~ Player + subject.id, temp_df %>% filter(Compare == i))
# temp_summary.FE <- summary(temp_model.FE)
# temp_intercept.FE <- temp_summary.FE[["coefficients"]][1,1]
# temp_intercept_pvalue.FE <- temp_summary.FE[["coefficients"]][1,4]
# temp_est.FE <- temp_summary.FE[["coefficients"]][2,1]
# temp_pvalue.FE <- temp_summary.FE[["coefficients"]][2,4]
#
dat <- df_all_cdf %>% mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>% filter(Renamed.Map == c, Compare == i)
dat <- pdata.frame(dat, index=c("subject.id")  )
# # Random effects; no clustered standard error; probably better way to do this
temp_model.RE <- plm( Effort ~ Player , data= dat  , model="between")
temp_summary.RE <- summary(temp_model.RE)
temp_intercept.RE <- temp_summary.RE[["coefficients"]][1,1]
temp_intercept_pvalue.RE <- temp_summary.RE[["coefficients"]][1,4]
temp_est.RE <- temp_summary.RE[["coefficients"]][2,1]
temp_pvalue.RE <- temp_summary.RE[["coefficients"]][2,4]
if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
df_all_cdf <- df_clean %>% dplyr::select(Session, Period, subject.id, Player, District, Map, Effort) %>%
filter(!grepl("p", District))
df_all_cdf <- df_all_cdf %>%
filter(Period >= 15, Period <= 24) %>%
mutate(District.compare = ifelse((District == "EDG" & Player == 'A')|(District == "ELG" & Player == 'B'), "DG Player A to LG Player B",
ifelse((District == "ELG" & Player == 'A')|(District == "EDG" & Player == 'B'), "LG Player A to DG Player B","W for Both Players")),
Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")))
df_all_cdf <- df_all_cdf %>%
mutate(Adv.District.Names = ifelse((Map == 1 & District == "EDG" & Player == "B")|(Map == 5 & District == "ELG" & Player == "A"), "Two Partisan For",
ifelse((Map == 1 & District == "ELG" & Player == "B")|(Map == 5 & District == "EDG" & Player == "A"), "Three Partisan Against",
ifelse((Map == 1 & District == "EW" & Player == "B")|(Map == 5 & District == "EW" & Player == "A"),"One Partisan For", "Error"))),
Disadv.District.Names = ifelse((Map == 1 & District == "EDG" & Player == "A")|(Map == 5 & District == "ELG" & Player == "B"), "Two Partisan Against",
ifelse((Map == 1 & District == "ELG" & Player == "A")|(Map == 5 & District == "EDG" & Player == "B"), "Three Partisan For",
ifelse((Map == 1 & District == "EW" & Player == "A")|(Map == 5 & District == "EW" & Player == "B"),"One Partisan Against", "Error"))))
df_all_cdf <- df_all_cdf %>%
filter(Period >= 15, Period <= 24) %>%
mutate(District.compare = ifelse((District == "EDG" & Player == 'A')|(District == "ELG" & Player == 'B'), "DG Player A to LG Player B",
ifelse((District == "ELG" & Player == 'A')|(District == "EDG" & Player == 'B'), "LG Player A to DG Player B","W for Both Players")),
Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Renamed.Map = ifelse((Map == 1 & Player == "B")|(Map == 5 & Player =="A"), "Advantaged",
ifelse((Map == 1 & Player == "A")|(Map == 5 & Player == "B"),"Disadvantaged",
ifelse(Map == 2, "Sym_1_1",
ifelse(Map == 3, "Sym_1_3", "Sym_3_1")))))
View(df_all_cdf)
Map <- c("Sym_1_1", "Sym_1_3", "Sym_3_1", "Advantaged", "Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
adv_coef_cdfs.fixed.effects <- data.frame()
disadv_coef_cdfs.fixed.effects <- data.frame()
fair_coef_cdfs.fixed.effects <- data.frame()
adv_coef_cdfs.random.effects <- data.frame()
disadv_coef_cdfs.random.effects <- data.frame()
fair_coef_cdfs.random.effects <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player,
subject.id
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
dat <- df_all_cdf %>% mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>% filter(Renamed.Map == c, Compare == i)
dat <- pdata.frame(dat, index=c("subject.id")  )
# # Random effects; no clustered standard error; probably better way to do this
temp_model.RE <- plm( Effort ~ Player , data= dat  , model="between")
temp_summary.RE <- summary(temp_model.RE)
temp_intercept.RE <- temp_summary.RE[["coefficients"]][1,1]
temp_intercept_pvalue.RE <- temp_summary.RE[["coefficients"]][1,4]
temp_est.RE <- temp_summary.RE[["coefficients"]][2,1]
temp_pvalue.RE <- temp_summary.RE[["coefficients"]][2,4]
if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
xtable(adv_coef_cdfs)
View(df_all_cdf)
View(adv_coef_cdfs)
xtable(adv_coef_cdfs.random.effects)
View(adv_coef_cdfs.random.effects)
View(adv_coef_cdfs)
##-------------------------------------
##            Table 7                --
##-------------------------------------
stage_1to2_regression_data <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 15 & Period <= 27) %>%
gather(Map, Effort, TE_1:TE_5)
stage_1to2_regression_data <- stage_1to2_regression_data %>% mutate(subject.id = as.factor(Session*8-(8-Subject)),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
stage_1to2_regression_data <- stage_1to2_regression_data %>% mutate(subject.id = as.factor(as.numeric(Session)*8-(8-as.numeric(Subject))),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
map_impact_on_stage_1to2_no_learning_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Stage_2_indicator*Adv + Stage_2_indicator*Disadv + Stage_2_indicator*Symm_1_3 + Stage_2_indicator*Symm_3_1 + subject.id, data = stage_1to2_regression_data)
stage_1to2_regression_data_with_learning <- stage_1to2_regression_data %>% filter(Period >= 20)
map_impact_on_stage_1to2_with_learning_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Stage_2_indicator*Adv + Stage_2_indicator*Disadv + Stage_2_indicator*Symm_1_3 + Stage_2_indicator*Symm_3_1 + subject.id, data = stage_1to2_regression_data_with_learning)
stargazer(map_impact_on_stage_1to2_no_learning_FE,
map_impact_on_stage_1to2_with_learning_FE,
title = "Map Impact with Stage 2 Indicator (FE and Clustereed SE)",
column.labels = c("w/out learning", "w/ learning"),
label = "Tab:stage_1to2_with_and_without_learning_FE_CSE",
omit = "subject.id", single.row = T)
source("~/Desktop/Research/GerryMandering/An_Anderson_Deck/Raw_Data/analyze_full_data.R", echo=TRUE)
