dissag.df.overlay %>% filter(adv==0) %>% summarise(mean(Effort))
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(one.bids = ifelse((EDG_4 > 0 & ELG_4 == 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 == 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(all.three.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(all.zeros.bids = ifelse((EDG_4 == 0 & ELG_4 == 0 & EW_4 == 0),1,0))
summarize(map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
## Took way too long to figure this out (~2 hours)
# install.packages("matrixStats")
library("matrixStats")
map_four_bidding <- map_four_bidding %>%
mutate(districts.bid = ifelse(all.three.bids == 1, "Three", ifelse(two.bids == 1, "Two", ifelse(one.bids == 1, "One", "Zero"))),
max_bid = pmax(EDG_4, ELG_4, EW_4),
min_bid = pmin(EDG_4, ELG_4, EW_4),
median_bid = rowMedians(as.matrix(map_four_bidding[,c(5,6,7)])))
map_four_bidding <- map_four_bidding %>%
mutate(Spread = ifelse(all.three.bids == 1, max_bid - min_bid,
ifelse(two.bids == 1, max_bid - median_bid,
ifelse(one.bids == 1, max_bid - min_bid, -1))))
map_four_bidding$districts.bid <- factor(map_four_bidding$districts.bid,                 # Re-level group factor
levels = c("Zero", "One", "Two", "Three"))
ggplot(map_four_bidding, aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80) +
labs(title = "Unadjusted Spread",
subtitle = "Symm_3_1")
map_four_bidding %>% filter(districts.bid == c("Two","Three")) %>%
ggplot(aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80)+
facet_wrap(~districts.bid) +
labs(title = "Unadjusted Spread",
subtitle = "Symm_3_1")
## Do the pcts and the graphs treating bids =< 5 as if they are 0
# Adjusted Spread (all bids < 5 setting equal to 0)
adjusted_map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
# Replace bids <= 5 with 0
adjusted_map_four_bidding[,5:7][adjusted_map_four_bidding[,5:7] <= 5 ] <- 0
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(one.bids = ifelse((EDG_4 > 0 & ELG_4 == 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 == 0 & EW_4 > 0),1,0))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(all.three.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 > 0),1,0))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(all.zeros.bids = ifelse((EDG_4 == 0 & ELG_4 == 0 & EW_4 == 0),1,0))
summarize(adjusted_map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
adjusted_map_four_bidding <- adjusted_map_four_bidding %>%
mutate(districts.bid = ifelse(all.three.bids == 1, "Three", ifelse(two.bids == 1, "Two", ifelse(one.bids == 1, "One", "Zero"))),
max_bid = pmax(EDG_4, ELG_4, EW_4),
min_bid = pmin(EDG_4, ELG_4, EW_4),
median_bid = rowMedians(as.matrix(adjusted_map_four_bidding[,c(5,6,7)])))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>%
mutate(Spread = ifelse(all.three.bids == 1, max_bid - min_bid,
ifelse(two.bids == 1, max_bid - median_bid,
ifelse(one.bids == 1, max_bid - min_bid, -1))))
adjusted_map_four_bidding$districts.bid <- factor(adjusted_map_four_bidding$districts.bid,         # Re-level group factor
levels = c("Zero", "One", "Two", "Three"))
ggplot(adjusted_map_four_bidding, aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80)+
labs(title = "Adjusted Spread",
subtitle = "Symm_3_1")
adjusted_map_four_bidding %>% filter(districts.bid == c("Two","Three")) %>%
ggplot(aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80)+
facet_wrap(~districts.bid) +
labs(title = "Adjusted Spread",
subtitle = "Symm_3_1")
library("stats")
# Map 4 Dark Grey
EDG4A <- subset(df_all_cdf, Map == 4 & District == "EDG" & Player == "A")[,"Effort"]
EDG4B <- subset(df_all_cdf, Map == 4 & District == "EDG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EDG4A)),as.numeric(unlist(EDG4B)))
# Map 4 Light Grey
ELG4A <- subset(df_all_cdf, Map == 4 & District == "ELG" & Player == "A")[,"Effort"]
ELG4B <- subset(df_all_cdf, Map == 4 & District == "ELG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ELG4A)),as.numeric(unlist(ELG4B)))
# Map 4 White
EW4A <- subset(df_all_cdf, Map == 4 & District == "EW" & Player == "A")[,"Effort"]
EW4B <- subset(df_all_cdf, Map == 4 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW4A)),as.numeric(unlist(EW4B)))
# Map 2 White
EW2A <- subset(df_all_cdf, Map == 2 & District == "EW" & Player == "A")[,"Effort"]
EW2B <- subset(df_all_cdf, Map == 2 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW2A)),as.numeric(unlist(EW2B)))
# Map 3 White
EW3A <- subset(df_all_cdf, Map == 3 & District == "EW" & Player == "A")[,"Effort"]
EW3B <- subset(df_all_cdf, Map == 3 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW3A)),as.numeric(unlist(EW3B)))
# Advantaged
ADV.A <- subset(dissag.df.overlay, Advantage == "Adv" & Player == "A")[,"Effort"]
ADV.B <- subset(dissag.df.overlay, Advantage == "Adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ADV.A)),as.numeric(unlist(ADV.B)))
# Disadvantaged
Dis.ADV.A <- subset(dissag.df.overlay, Advantage == "Dis.adv" & Player == "A")[,"Effort"]
Dis.ADV.B <- subset(dissag.df.overlay, Advantage == "Dis.adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(Dis.ADV.A)),as.numeric(unlist(Dis.ADV.B)))
# Adv vs Dis.adv
ADV.All <- subset(dissag.df.overlay, Advantage == "Adv")[,"Effort"]
Dis.ADV.All <- subset(dissag.df.overlay, Advantage == "Dis.adv")[,"Effort"]
ks.test(as.numeric(unlist(ADV.All)),as.numeric(unlist(Dis.ADV.All)))
# make each pair total an observation
# gotta pull in the pEDG, pELG, pEW metrics
# total effort by pair addition to data frame
df_pair_totals <- df %>% mutate(Pair_5 = EDG_5 + pEDG_5 + ELG_5 + pELG_5 + EW_5 + pEW_5,
Pair_4 = EDG_4 + pEDG_4 + ELG_4 + pELG_4 + EW_4 + pEW_4,
Pair_3 = EDG_3 + pEDG_3 + ELG_3 + pELG_3 + EW_3 + pEW_3,
Pair_2 = EDG_2 + pEDG_2 + ELG_2 + pELG_2 + EW_2 + pEW_2,
Pair_1 = EDG_1 + pEDG_1 + ELG_1 + pELG_1 + EW_1 + pEW_1)
df_pair_totals <- df_pair_totals %>% mutate(Partner_Player =
ifelse(Player == "B","A","B"))
long_pairs_df <- df_pair_totals %>%
dplyr::select(Session, Period, Subject, Player, Partner, Partner_Player, LType, Pair_5:Pair_1) %>%
gather(District, Pair_Effort, Pair_5:Pair_1)
cleaned_pairs <- long_pairs_df %>% separate(District, c("Pairs", "Map"))
cleaned_pairs <- cleaned_pairs %>%
mutate(renamed.map = ifelse(Map==1, "Gerry_B",
ifelse(Map==2, "Symm_1_1",
ifelse(Map==3, "Symm_1_3",
ifelse(Map==4, "Symm_3_1", "Gerry_A")))))
## only look at subject == c(1,2,3,4) since we'd repeat the other metrics
ggplot(cleaned_pairs %>%
filter(Subject == c(1,2,3,4)), aes(x = as.numeric(Pair_Effort), size = "1")) +
stat_ecdf(aes(colour = renamed.map)) +
xlim(0,80) +
ggtitle("Pair Total Bidding by Map") +
guides(size = F)
time_series_avg <- df_clean %>%
filter(((Map == 1 | Map == 5 | Map == 2 | Map == 3) & District == "EW")|(Map == 4)) %>%
dplyr::select(Session, Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Choice = ifelse(Advantage == "Adv", "Adv",
ifelse(Advantage == "Dis.adv", "Dis",
ifelse(Map == 3, "Symm_1_3 White",
ifelse(Map == 2, "Symm_1_1 White",
ifelse(Map == 4 & District == "EW", "Symm_3_1 EW",
ifelse(Map == 4 & District == "EDG", "Symm_3_1 EDG", "Symm_3_1 ELG")))))))
# Get averages for advantages in map 1 or 5, disadvantaged in map 1 or 5, white in map 2 or 3, and all districts in map 4
session.level.ts.avgs <- time_series_avg %>% filter(Period < 28, District == c("EW","EDG","ELG")) %>%
group_by(Session, Period, Choice) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
## These time series plots are only efforst of the competitive districts. We should also look at non competitive districts to determine if a learning effect is evident.
session.level.ts.avgs %>%
ggplot(aes(x=Period, y=avg.Effort)) +
geom_line(aes(color = as.character(Session))) + facet_wrap(~Choice) + xlim(15,27) + ylim(0,60) +
scale_x_continuous(breaks=c(15:27))
time_series_avg_across_sessions <- df_clean %>%
filter(((Map == 1 | Map == 5 | Map == 2 | Map == 3) & District == "EW")|(Map == 4)) %>%
dplyr::select(Session, Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Choice = ifelse(Advantage == "Adv", "Adv",
ifelse(Advantage == "Dis.adv", "Dis",
ifelse(Map == 3, "Symm_1_3 White",
ifelse(Map == 2, "Symm_1_1 White",
ifelse(Map == 4 & District == "EW", "Symm_3_1 EW",
ifelse(Map == 4 & District == "EDG", "Symm_3_1 EDG", "Symm_3_1 ELG")))))))
# Get averages for advantages in map 1 or 5, disadvantaged in map 1 or 5, white in map 2 or 3, and all districts in map 4
session.level.ts.avgs.across.sessions <- time_series_avg_across_sessions %>% filter(Period < 28, District == c("EW","EDG","ELG")) %>%
group_by(Period, Choice) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
## These time series plots are only efforst of the competitive districts. We should also look at non competitive districts to determine if a learning effect is evident.
session.level.ts.avgs.across.sessions %>%
ggplot(aes(x=Period, y=avg.Effort)) +
geom_line() + facet_wrap(~Choice) + xlim(15,27) + ylim(0,60) +
scale_x_continuous(breaks=c(15:27))
time_series_avg_noncompetitive <- df_clean %>%
filter((Map == 1 | Map == 5 | Map == 2 | Map == 3) & District == c("EDG","ELG")) %>%
dplyr::select(Session, Period, subject.id, Player, Map, District, Effort) %>%
mutate(Choice = ifelse(Map == 1 & District == "EDG", "Gerry_B EDG",
ifelse(Map == 1 & District == "ELG", "Gerry_B ELG",
ifelse(Map == 5 & District == "EDG", "Gerry_A EDG",
ifelse(Map == 5 & District == "ELG", "Gerry_A ELG",
ifelse(Map == 3 & District == "EDG", "Symm_1_3 EDG",
ifelse(Map == 3 & District == "ELG", "Symm_1_3 ELG",
ifelse(Map == 2 & District == "EDG", "Symm_1_1 EDG","Symm_1_1 ELG"))))))))
# Get averages for advantages in map 1 or 5, disadvantaged in map 1 or 5, white in map 2 or 3, and all districts in map 4
session.level.ts.avgs.noncompetitive <- time_series_avg_noncompetitive %>%
filter(Period < 29) %>%
group_by(Session, Period, Choice) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
## These time series plots are only efforst of the competitive districts. We should also look at non competitive districts to determine if a learning effect is evident.
session.level.ts.avgs.noncompetitive %>%
ggplot(aes(x=Period, y=avg.Effort)) +
geom_line(aes(color = as.character(Session))) + facet_wrap(~Choice) + xlim(15,27) + ylim(0,60) +
scale_x_continuous(breaks=c(15:24))
time_series_avg_noncompetitive %>%
filter(Period < 25) %>%
group_by(Period, Choice) %>% summarise(avg.Effort = mean(as.numeric(Effort))) %>%
ggplot(aes(x=Period, y=avg.Effort)) +
geom_line() +
facet_wrap(~Choice) + xlim(15,27) + ylim(0,60) +
scale_x_continuous(breaks=c(15:29))
print.data.frame(avg.bid.map.district)
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
sum(mode_df$Player == "A" & mode_df$mode.map == 1)
sum(mode_df$gerry)
pct.gerry <- sum(mode_df$gerry)/64
pct.gerry
# Figure out pct of subjects gerrymandering without including those that never converge on a map
mode_df %>% filter(selection.tie == 0) %>%
group_by(gerry) %>%
summarise(count = n())
# stage_2 <- stage_2 %>% mutate(gerry = ifelse((Player == 'A' & Map_Selection == 5)|(Player == 'B' & Map_Selection == 1),1,0))
# pct.gerry.2 <- sum(stage_2$gerry)/nrow(stage_2)
# pct.gerry.2
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- round((by_map_selection_count$n/sum(by_map_selection_count$n))*100, 0)
print.data.frame(by_map_selection_count)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry) %>%
mutate(support_gerry = ifelse(PEQ_8 == 1, "Yes", "No"),
gerry.character = ifelse(gerry == 1,"Did Gerrymander","Did not Gerrymander"))
# ggplot(transform(
#   gerry_and_politics, gerry.character=factor(gerry.character, levels=c("Did Gerrymander","Did not Gerrymander"))
#   ),
#    aes(x = PEQ_7)) +
#   geom_histogram(aes(fill = as.character(support_gerry))) +
#   geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, size = 3, colour = "white")+
#   labs(fill = "Do you support gerrymandering?") +
#   facet_wrap(~gerry.character) + xlim(1,9) + scale_x_continuous(breaks=c(1:9)) +
#   labs(title = "Political Leaning and Gerrymandering",
#        caption = "The left and right panels represent political self-identification \n for participants who did and did not, respectively, engage in gerrymandering through map selection. \n The coloring identifies those who stated they did or didnot support gerrymandering.")
ggplot(transform(
gerry_and_politics, gerry.character=factor(gerry.character, levels=c("Did Gerrymander","Did not Gerrymander"))
), aes(x=PEQ_7, fill = as.character(support_gerry))) +
geom_bar(width = 0.5, alpha = 1, position="identity") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, size = 3, colour = "white") +
facet_wrap(~gerry.character) + xlim(1,9) + scale_x_continuous(breaks=c(1:9)) +
labs(fill = "Do you support gerrymandering?",
title = "Political Leaning and Gerrymandering",
caption = "The left and right panels represent political self-identification \n for participants who did and did not, respectively, engage in gerrymandering through map selection. \n The coloring identifies those who stated they did or didnot support gerrymandering.")
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
geom_histogram(aes(fill = "PEQ_8", fill = "PEQ_8")) +
xlim(1,9) + scale_x_continuous(breaks=c(1:9))
nrow(subset(gerry_and_politics, PEQ_7 > 5))
nrow(subset(gerry_and_politics, PEQ_7 < 5))
sum(gerry_and_politics$gerry)/nrow(gerry_and_politics)
## TO MAKE
##### stacked figure: they do gerrymandering and they don't gerrymander
library(ggpubr)
rank_res_gerryied <- wilcox.test(PEQ_7 ~ as.character(gerry), data = gerry_and_politics,
exact = FALSE)
rank_res_gerryied
rank_res_support.gerry <- wilcox.test(PEQ_7 ~ support_gerry, data = gerry_and_politics,
exact = FALSE)
rank_res_support.gerry
rank_support.gerry_actually.gerry <- wilcox.test(PEQ_8 ~ as.character(gerry), data = gerry_and_politics, exact = FALSE)
rank_support.gerry_actually.gerry
# wilcox.test(gerry ~ support_gerry, data = gerry_and_politics, exact = FALSE)
nrow(subset(gerry_and_politics, PEQ_8 == 2 & gerry == 1))/nrow(subset(gerry_and_politics, PEQ_8 == 2))
gerry_and_politics <- gerry_and_politics %>%
mutate(support_gerry_numeric = ifelse(support_gerry == "No", 0, 1))
nrow(subset(gerry_and_politics, gerry == 1 & gerry_and_politics$support_gerry == "Yes"))/nrow(subset(gerry_and_politics, gerry == 1))
nrow(subset(gerry_and_politics, gerry == 0 & gerry_and_politics$support_gerry == "Yes"))/nrow(subset(gerry_and_politics, gerry == 0))
mode_df_with_end <- inner_join(mode_df,stage_3, copied = F) %>%
rename(final.map.choice = Map_Selection) %>%
mutate(spillover = ifelse(mode.map == final.map.choice & gerry == 1, "Spillover", "No Spillover"))
mode_df_with_end <- mode_df_with_end[!(mode_df_with_end$final.map.choice == -99),]
mode_df_with_end <- mode_df_with_end %>%
mutate(final.map.choice = ifelse(final.map.choice==1, "Gerry_B",
ifelse(final.map.choice==2, "Symm_1_1",
ifelse(final.map.choice==3, "Symm_1_3",
ifelse(final.map.choice==4, "Symm_3_1", "Gerry_A")))))
mode_df_with_end <- mode_df_with_end %>%
mutate(mode.map = ifelse(mode.map==1, "Gerry_B",
ifelse(mode.map==2, "Symm_1_1",
ifelse(mode.map==3, "Symm_1_3",
ifelse(mode.map==4, "Symm_3_1", "Gerry_A")))))
#combine maps 1 and 5. Only color maps based off if they are potential spillovers
mode_df_with_end <- mode_df_with_end %>%
mutate(adjusted.map.mode = ifelse(mode.map == 'Gerry_A' | mode.map == 'Gerry_B', "Gerry A or B", as.character(mode.map)),
adjusted.final.map.choice =
ifelse(final.map.choice == "Gerry_A" | final.map.choice == "Gerry_B", "Gerry A or B", as.character(final.map.choice)))
map_mode_with_end_bar <-
ggplot(mode_df_with_end, aes(x=adjusted.final.map.choice, fill = spillover, color = spillover)) +
geom_bar(width = 0.5, alpha = 0.5, position="identity")
map_mode_with_end_bar + labs(title = "Map Choice in Final Period",
subtitle = "Spillover includes only those who actually gerrymandered and chose their previously advantaged map both in stage 2 and stage 3")
#long_df <- df %>% dplyr::select(Session, Period, Subject, Player, Partner, LType, EDG_5:EW_1, pEDG_5:pEW_1) #%>% gather(District, Effort, EDG_5:pEW_1)
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
#subject.id = Session*8-(8-Subject)
# want to use map 2 as baseline...?? Did we decide on this or not...
map.player.interaction <- lm(
Effort ~ Player_B + Gerry_B + Gerry_B*Player_B + Symm_1_3 + Symm_1_3*Player_B + Symm_3_1 + Symm_3_1*Player_B
+ Gerry_A + Gerry_A*Player_B,
data = regress_df
)
summary(map.player.interaction, robust = T)
#summary(map.adv.interaction)
library(car)
#linearHypothesis(map.player.interaction, c("Gerry_A + Player_B:Gerry_A = 0"))
linearHypothesis(map.player.interaction, c("Player_B + Player_B:Symm_1_3 = 0")) ## in sig at 5%
linearHypothesis(map.player.interaction, c("Player_B + Player_B:Symm_3_1 = 0")) ## in sig at 5%
linearHypothesis(map.player.interaction, c("Player_B + Player_B:Symm_1_3 = 0", "Player_B + Player_B:Symm_3_1 = 0", "Player_B = 0"))
linearHypothesis(map.player.interaction, c("Player_B + Gerry_B + Player_B:Gerry_B = Gerry_A"))
linearHypothesis(map.player.interaction, c("Player_B + Gerry_A + Player_B:Gerry_A = Gerry_B"))
linearHypothesis(map.player.interaction, c(
"Player_B + Gerry_B + Player_B:Gerry_B = Gerry_A", "Player_B + Gerry_A + Player_B:Gerry_A = Gerry_B" ,"Player_B + Player_B:Symm_1_3 = 0", "Player_B + Player_B:Symm_3_1 = 0", "Player_B = 0")
)
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 15 & Period < 25) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
map.adv.interaction <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Period + Adv*Period + Disadv*Period + Symm_1_3*Period + Symm_3_1*Period,
data = regress_df
)
summary(map.adv.interaction)
linearHypothesis(map.adv.interaction, c("Symm_1_3 = 10"))
linearHypothesis(map.adv.interaction, c("Symm_3_1 = 10")) # so map 4 is pushing expenditure up, but not as much as theory predicts
linearHypothesis(map.adv.interaction, c("Symm_1_3 = Symm_3_1")) # map 4 has a larger effect than map 3 even though they're predicted to have the same effect (as shown by regression, but still worth testing)
linearHypothesis(map.adv.interaction, c("Adv = Disadv"))
# testing on periods
linearHypothesis(map.adv.interaction, c("Adv:Period = 0", "Disadv:Period = 0", "Symm_1_3:Period = 0", "Symm_3_1:Period = 0", "Period = 0"))
## updating period to include stage 2 here
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 15 & Period <= 27) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
stage_2_impact <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Adv*Stage_2_indicator + Disadv*Stage_2_indicator + Symm_1_3*Stage_2_indicator + Symm_3_1*Stage_2_indicator,
data = regress_df
)
summary(stage_2_impact)
linearHypothesis(stage_2_impact, c("Symm_1_3 = 10"))
linearHypothesis(stage_2_impact, c("Symm_3_1 = 10"))
linearHypothesis(stage_2_impact, c("Symm_1_3 = Symm_3_1"))
linearHypothesis(stage_2_impact, c("Adv:Stage_2_indicator = 0", "Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0", "Symm_3_1:Stage_2_indicator = 0"))
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 20 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
map.player.interaction <- lm(
Effort ~ Player_B + Gerry_B + Gerry_B*Player_B + Symm_1_3 + Symm_1_3*Player_B + Symm_3_1 + Symm_3_1*Player_B
+ Gerry_A + Gerry_A*Player_B,
data = regress_df
)
summary(map.player.interaction)
library(car)
#linearHypothesis(map.player.interaction, c("Map_5 + Player_B:Map_5 = 0"))
linearHypothesis(map.player.interaction, c("Player_B + Player_B:Symm_1_3 = 0")) ## in sig at 5%
linearHypothesis(map.player.interaction, c("Player_B + Player_B:Symm_3_1 = 0")) ## in sig at 5%
linearHypothesis(map.player.interaction, c("Player_B + Player_B:Symm_1_3 = 0", "Player_B + Player_B:Symm_3_1 = 0", "Player_B = 0"))
linearHypothesis(map.player.interaction, c("Player_B + Gerry_B + Player_B:Gerry_B = Gerry_A"))
linearHypothesis(map.player.interaction, c("Player_B + Gerry_A + Player_B:Gerry_A = Gerry_B"))
linearHypothesis(map.player.interaction, c(
"Player_B + Gerry_B + Player_B:Gerry_B = Gerry_A", "Player_B + Gerry_A + Player_B:Gerry_A = Gerry_B" ,"Player_B + Player_B:Symm_1_3 = 0", "Player_B + Player_B:Symm_3_1 = 0", "Player_B = 0")
)
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 20 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
map.adv.interaction <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Period + Adv*Period + Disadv*Period + Symm_1_3*Period + Symm_3_1*Period,
data = regress_df
)
summary(map.adv.interaction)
linearHypothesis(map.adv.interaction, c("Symm_1_3 = 10"))
linearHypothesis(map.adv.interaction, c("Symm_3_1 = 10")) # so map 4 is pushing expenditure up, but not as much as theory predicts
linearHypothesis(map.adv.interaction, c("Symm_1_3 = Symm_3_1")) # map 4 has a larger effect than map 3 even though they're predicted to have the same effect (as shown by regression, but still worth testing)
linearHypothesis(map.adv.interaction, c("Adv = Disadv"))
# testing on periods
linearHypothesis(map.adv.interaction, c("Adv:Period = 0", "Disadv:Period = 0", "Symm_1_3:Period = 0", "Symm_3_1:Period = 0", "Period = 0"))
## updating period to include stage 2 here
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period > 19 & Period <= 27) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
stage_2_impact <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Adv*Stage_2_indicator + Disadv*Stage_2_indicator + Symm_1_3*Stage_2_indicator + Symm_3_1*Stage_2_indicator,
data = regress_df
)
summary(stage_2_impact)
linearHypothesis(stage_2_impact, c("Symm_1_3 = 10")) # can reject this
linearHypothesis(stage_2_impact, c("Symm_3_1 = 10")) # can't reject this (marginally we can)
linearHypothesis(stage_2_impact, c("Symm_3_1 = Symm_1_3")) # can safely reject they are the same
linearHypothesis(stage_2_impact, c("Adv:Stage_2_indicator = 0", "Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0", "Symm_3_1:Stage_2_indicator = 0"))
summarize(map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
# compared to
summarize(subset(map_four_bidding, Period > 19), n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
# the above have very little difference
library("stats")
# Map 4 Dark Grey
EDG4A <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EDG" & Player == "A")[,"Effort"]
EDG4B <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EDG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EDG4A)),as.numeric(unlist(EDG4B)))
# Map 4 Light Grey
ELG4A <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "ELG" & Player == "A")[,"Effort"]
ELG4B <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "ELG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ELG4A)),as.numeric(unlist(ELG4B)))
# Map 4 White
EW4A <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EW" & Player == "A")[,"Effort"]
EW4B <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW4A)),as.numeric(unlist(EW4B)))
# Map 2 White
EW2A <- subset(df_all_cdf, Period > 19 & Map == 2 & District == "EW" & Player == "A")[,"Effort"]
EW2B <- subset(df_all_cdf, Period > 19 & Map == 2 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW2A)),as.numeric(unlist(EW2B)))
# Map 3 White
EW3A <- subset(df_all_cdf, Period > 19 & Map == 3 & District == "EW" & Player == "A")[,"Effort"]
EW3B <- subset(df_all_cdf, Period > 19 &Map == 3 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW3A)),as.numeric(unlist(EW3B)))
# Advantaged
ADV.A <- subset(dissag.df.overlay, Period > 19 & Advantage == "Adv" & Player == "A")[,"Effort"]
ADV.B <- subset(dissag.df.overlay, Period > 19 & Advantage == "Adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ADV.A)),as.numeric(unlist(ADV.B)))
# Disadvantaged
Dis.ADV.A <- subset(dissag.df.overlay, Period > 19 & Advantage == "Dis.adv" & Player == "A")[,"Effort"]
Dis.ADV.B <- subset(dissag.df.overlay, Period > 19 & Advantage == "Dis.adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(Dis.ADV.A)),as.numeric(unlist(Dis.ADV.B)))
# Adv vs Dis.adv
ADV.All <- subset(dissag.df.overlay, Period > 19 & Advantage == "Adv")[,"Effort"]
Dis.ADV.All <- subset(dissag.df.overlay, Period > 19 & Advantage == "Dis.adv")[,"Effort"]
ks.test(as.numeric(unlist(ADV.All)),as.numeric(unlist(Dis.ADV.All)))
View(map_four_bidding)
