if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
names(df_all_cdf)
Map <- c("Sym_1_1", "Sym_1_3", "Sym_3_1", "Advantaged", "Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
adv_coef_cdfs.fixed.effects <- data.frame()
disadv_coef_cdfs.fixed.effects <- data.frame()
fair_coef_cdfs.fixed.effects <- data.frame()
adv_coef_cdfs.random.effects <- data.frame()
disadv_coef_cdfs.random.effects <- data.frame()
fair_coef_cdfs.random.effects <- data.frame()
for(c in Map){
temp_df <- subset(df_all_cdf, Renamed.Map == c)
for(i in unique(df_all_cdf$Compare)){
temp_df <- subset(temp_df, Compare == i)
temp_model <- lm(Effort ~ Player, temp_df)
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
# # Fixed effects; no clustered standard error; probably better way to do this
# temp_model.FE <- lm(Effort ~ Player + subject.id, temp_df %>% filter(Compare == i))
# temp_summary.FE <- summary(temp_model.FE)
# temp_intercept.FE <- temp_summary.FE[["coefficients"]][1,1]
# temp_intercept_pvalue.FE <- temp_summary.FE[["coefficients"]][1,4]
# temp_est.FE <- temp_summary.FE[["coefficients"]][2,1]
# temp_pvalue.FE <- temp_summary.FE[["coefficients"]][2,4]
#
# # Random effects; no clustered standard error; probably better way to do this
temp_df_panel <- pdata.frame(temp_df, index=c("subject.id")  )
temp_model.RE <- plm( Effort ~ Player, data= temp_df_panel %>% filter(Compare == i), model="between")
temp_summary.RE <- summary(temp_model.RE)
temp_intercept.RE <- temp_summary.RE[["coefficients"]][1,1]
temp_intercept_pvalue.RE <- temp_summary.RE[["coefficients"]][1,4]
temp_est.RE <- temp_summary.RE[["coefficients"]][2,1]
temp_pvalue.RE <- temp_summary.RE[["coefficients"]][2,4]
if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
Map <- c("Sym_1_1", "Sym_1_3", "Sym_3_1", "Advantaged", "Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
adv_coef_cdfs.fixed.effects <- data.frame()
disadv_coef_cdfs.fixed.effects <- data.frame()
fair_coef_cdfs.fixed.effects <- data.frame()
adv_coef_cdfs.random.effects <- data.frame()
disadv_coef_cdfs.random.effects <- data.frame()
fair_coef_cdfs.random.effects <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player,
subject.id
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
# # Fixed effects; no clustered standard error; probably better way to do this
# temp_model.FE <- lm(Effort ~ Player + subject.id, temp_df %>% filter(Compare == i))
# temp_summary.FE <- summary(temp_model.FE)
# temp_intercept.FE <- temp_summary.FE[["coefficients"]][1,1]
# temp_intercept_pvalue.FE <- temp_summary.FE[["coefficients"]][1,4]
# temp_est.FE <- temp_summary.FE[["coefficients"]][2,1]
# temp_pvalue.FE <- temp_summary.FE[["coefficients"]][2,4]
#
# # Random effects; no clustered standard error; probably better way to do this
temp_df_panel <- pdata.frame(dat, index=c("subject.id")  )
temp_model.RE <- plm( Effort ~ Player, data= temp_df %>% filter(Compare == i), model="between")
temp_summary.RE <- summary(temp_model.RE)
temp_intercept.RE <- temp_summary.RE[["coefficients"]][1,1]
temp_intercept_pvalue.RE <- temp_summary.RE[["coefficients"]][1,4]
temp_est.RE <- temp_summary.RE[["coefficients"]][2,1]
temp_pvalue.RE <- temp_summary.RE[["coefficients"]][2,4]
if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
Map <- c("Sym_1_1", "Sym_1_3", "Sym_3_1", "Advantaged", "Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
adv_coef_cdfs.fixed.effects <- data.frame()
disadv_coef_cdfs.fixed.effects <- data.frame()
fair_coef_cdfs.fixed.effects <- data.frame()
adv_coef_cdfs.random.effects <- data.frame()
disadv_coef_cdfs.random.effects <- data.frame()
fair_coef_cdfs.random.effects <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player,
subject.id
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
# # Fixed effects; no clustered standard error; probably better way to do this
# temp_model.FE <- lm(Effort ~ Player + subject.id, temp_df %>% filter(Compare == i))
# temp_summary.FE <- summary(temp_model.FE)
# temp_intercept.FE <- temp_summary.FE[["coefficients"]][1,1]
# temp_intercept_pvalue.FE <- temp_summary.FE[["coefficients"]][1,4]
# temp_est.FE <- temp_summary.FE[["coefficients"]][2,1]
# temp_pvalue.FE <- temp_summary.FE[["coefficients"]][2,4]
#
# # Random effects; no clustered standard error; probably better way to do this
temp_model.RE <- plm( Effort ~ Player , data= temp_df %>% filter(Compare == i)  , model="between")
temp_summary.RE <- summary(temp_model.RE)
temp_intercept.RE <- temp_summary.RE[["coefficients"]][1,1]
temp_intercept_pvalue.RE <- temp_summary.RE[["coefficients"]][1,4]
temp_est.RE <- temp_summary.RE[["coefficients"]][2,1]
temp_pvalue.RE <- temp_summary.RE[["coefficients"]][2,4]
if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
# ## Trying to figure out why I am getting different estimates for Player B effect when using different FE methods in R
dat <- df_all_cdf %>% filter(Renamed.Map == "Advantaged", Compare == "One Partisan For")
# #dat <- dat %>% mutate(numberplayer = ifelse(Player == "B", 1, 0))
# m1 <- lm(Effort ~ Player, data = dat)
# m2 <- lmer(Effort ~ Player + (1 | subject.id), data = dat)
#
# # I think using plm here is problematic because the player role does not vary by each subject.id, so perfect collinearity is the result and not providing a good plm index.
# # m2 <- plm(Effort ~ Player, data = dat, index = c("subject.id","Period"), model = "within")
# # m3 <- plm(Effort ~ Player, data = dat, index = "Period", model = "random")
z2 <- pdata.frame(dat, index=c("subject.id")  )
m3 <- plm( Effort ~ Player , data= z2  , model="between") # matches xtreg , fe
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
Map <- c("Sym_1_1", "Sym_1_3", "Sym_3_1", "Advantaged", "Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
adv_coef_cdfs.fixed.effects <- data.frame()
disadv_coef_cdfs.fixed.effects <- data.frame()
fair_coef_cdfs.fixed.effects <- data.frame()
adv_coef_cdfs.random.effects <- data.frame()
disadv_coef_cdfs.random.effects <- data.frame()
fair_coef_cdfs.random.effects <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player,
subject.id
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
# # Fixed effects; no clustered standard error; probably better way to do this
# temp_model.FE <- lm(Effort ~ Player + subject.id, temp_df %>% filter(Compare == i))
# temp_summary.FE <- summary(temp_model.FE)
# temp_intercept.FE <- temp_summary.FE[["coefficients"]][1,1]
# temp_intercept_pvalue.FE <- temp_summary.FE[["coefficients"]][1,4]
# temp_est.FE <- temp_summary.FE[["coefficients"]][2,1]
# temp_pvalue.FE <- temp_summary.FE[["coefficients"]][2,4]
#
dat <- df_all_cdf %>% filter(Renamed.Map == c, Compare == i)
dat <- pdata.frame(dat, index=c("subject.id")  )
# # Random effects; no clustered standard error; probably better way to do this
temp_model.RE <- plm( Effort ~ Player , data= dat  , model="between")
temp_summary.RE <- summary(temp_model.RE)
temp_intercept.RE <- temp_summary.RE[["coefficients"]][1,1]
temp_intercept_pvalue.RE <- temp_summary.RE[["coefficients"]][1,4]
temp_est.RE <- temp_summary.RE[["coefficients"]][2,1]
temp_pvalue.RE <- temp_summary.RE[["coefficients"]][2,4]
if(c == "Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
adv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
adv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
adv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else if (c == "Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
disadv_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
disadv_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
disadv_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
# fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
# fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
# fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
# fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
#
fair_coef_cdfs.random.effects[c,paste(i,"intercept",sep = " ")] <- temp_intercept.RE
fair_coef_cdfs.random.effects[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate",sep = " ")] <- temp_est.RE
fair_coef_cdfs.random.effects[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue.RE
}
}
}
# xtable(adv_coef_cdfs)
# xtable(disadv_coef_cdfs)
# xtable(fair_coef_cdfs)
xtable(adv_coef_cdfs.random.effects)
xtable(disadv_coef_cdfs.random.effects)
xtable(fair_coef_cdfs.random.effects)
# ## Trying to figure out why I am getting different estimates for Player B effect when using different FE methods in R
dat <- df_all_cdf %>% filter(Renamed.Map == "Advantaged", Compare == "One Partisan For")
# #dat <- dat %>% mutate(numberplayer = ifelse(Player == "B", 1, 0))
# m1 <- lm(Effort ~ Player, data = dat)
# m2 <- lmer(Effort ~ Player + (1 | subject.id), data = dat)
#
# # I think using plm here is problematic because the player role does not vary by each subject.id, so perfect collinearity is the result and not providing a good plm index.
# # m2 <- plm(Effort ~ Player, data = dat, index = c("subject.id","Period"), model = "within")
# # m3 <- plm(Effort ~ Player, data = dat, index = "Period", model = "random")
z2 <- pdata.frame(dat, index=c("subject.id")  )
m3 <- plm( Effort ~ Player , data= z2  , model="between") # matches xtreg , fe
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
# summary(m4)
View(fair_coef_cdfs.random.effects)
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
# ## Trying to figure out why I am getting different estimates for Player B effect when using different FE methods in R
dat <- df_all_cdf %>% filter(Renamed.Map == "Sym_3_1", Compare == "W for Both Players")
# #dat <- dat %>% mutate(numberplayer = ifelse(Player == "B", 1, 0))
# m1 <- lm(Effort ~ Player, data = dat)
# m2 <- lmer(Effort ~ Player + (1 | subject.id), data = dat)
#
# # I think using plm here is problematic because the player role does not vary by each subject.id, so perfect collinearity is the result and not providing a good plm index.
# # m2 <- plm(Effort ~ Player, data = dat, index = c("subject.id","Period"), model = "within")
# # m3 <- plm(Effort ~ Player, data = dat, index = "Period", model = "random")
z2 <- pdata.frame(dat, index=c("subject.id")  )
m3 <- plm( Effort ~ Player , data= z2  , model="between") # matches xtreg , fe
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
# ## Trying to figure out why I am getting different estimates for Player B effect when using different FE methods in R
dat <- df_all_cdf %>% filter(Renamed.Map == "Sym_3_1", Compare == "LG Player A to DG Player B")
# #dat <- dat %>% mutate(numberplayer = ifelse(Player == "B", 1, 0))
# m1 <- lm(Effort ~ Player, data = dat)
# m2 <- lmer(Effort ~ Player + (1 | subject.id), data = dat)
#
# # I think using plm here is problematic because the player role does not vary by each subject.id, so perfect collinearity is the result and not providing a good plm index.
# # m2 <- plm(Effort ~ Player, data = dat, index = c("subject.id","Period"), model = "within")
# # m3 <- plm(Effort ~ Player, data = dat, index = "Period", model = "random")
z2 <- pdata.frame(dat, index=c("subject.id")  )
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
# ## Trying to figure out why I am getting different estimates for Player B effect when using different FE methods in R
dat <- df_all_cdf %>% filter(Renamed.Map == "Sym_3_1", Compare == "LG Player A to DG Player B")
# #dat <- dat %>% mutate(numberplayer = ifelse(Player == "B", 1, 0))
# m1 <- lm(Effort ~ Player, data = dat)
# m2 <- lmer(Effort ~ Player + (1 | subject.id), data = dat)
#
# # I think using plm here is problematic because the player role does not vary by each subject.id, so perfect collinearity is the result and not providing a good plm index.
# # m2 <- plm(Effort ~ Player, data = dat, index = c("subject.id","Period"), model = "within")
# # m3 <- plm(Effort ~ Player, data = dat, index = "Period", model = "random")
z2 <- pdata.frame(dat, index=c("subject.id")  )
m3 <- plm( Effort ~ Player , data= z2  , model="between") # matches xtreg , fe
# m4 <- lme(Effort ~ Player, data = dat, random = pdDiag(~subject.id))
#
#
#
# summary(m1)
# summary(m2)
summary(m3)
install.packages("clusterSEs")
library(clusterSEs)
cluster.bs.plm(m3, dat = dat, cluster = "Session")
View(mode_df.v1)
