#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("EW2", "EW_2", x)
# }))
#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("EW1", "EW_1", x)
# }))
#
# ## partner
#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("pEW5", "pEW_5", x)
# }))
#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("pEW4", "pEW_4", x)
# }))
#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("pEW3", "pEW_3", x)
# }))
#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("pEW2", "pEW_2", x)
# }))
#
# long_df_map <- data.frame(lapply(long_df_map, function(x) {
#   gsub("pEW1", "pEW_1", x)
# }))
##########################
# Orderly data with district, Map, and effort amount for each subject each period in each session
# No need to use long_df_map because already renamed them manually above
df_clean <- long_df %>% separate(District, c("District", "Map"))
# get some interesting tables
avg.bid.map.district <- df_clean %>% group_by(Player, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.by.session <- df_clean %>% group_by(Session) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.session.map.district <- df_clean %>% group_by(Session, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
# recall: periods 15 - 24 are Stage 1, 25-27 are Stage 2, and 28 is Stage 3
avg.bid.by.period <- df_clean %>% group_by(Period, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
# Let's consider just the competitive districts
df_comp <- df_clean %>% subset(District == "EW" | (District==c("EDG","ELG") & Map == 4))
avg.bid.comp.dist <- df_comp %>% group_by(Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.comp.session <- df_comp %>% group_by(Session) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.comp.session.map.dist <- df_comp %>% group_by(Session, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
##
# install.packages("ggpubr")
library(ggpubr)
theme_set(theme_pubr())
# Equilibrium effort: .25v
g1.1 <- ggplot(df, aes(x = EDG_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80) +
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Gerry_B")
g1.2 <- ggplot(df, aes(x = ELG_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80) +
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Gerry_B")
g1.3 <- ggplot(df, aes(x = EW_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Gerry_B")
figure <- ggarrange(g1.1, g1.2, g1.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
# Equilibrium effort: .25v
g2.1 <- ggplot(df, aes(x = EDG_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Symm_1_1")
g2.2 <- ggplot(df, aes(x = ELG_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Symm_1_1")
g2.3 <- ggplot(df, aes(x = EW_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Symm_1_1")
figure.2 <- ggarrange(g2.1, g2.2, g2.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.2
# Equilibrium effort: 3/8 v
g3.1 <- ggplot(df, aes(x = EDG_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Symm_1_3")
g3.2 <- ggplot(df, aes(x = ELG_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Symm_1_3")
g3.3 <- ggplot(df, aes(x = EW_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 60, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Symm_1_3")
figure.3 <- ggarrange(g3.1, g3.2, g3.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.3
# Equilibrium effort: .125v per district
g4.1 <- ggplot(df, aes(x = EDG_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Symm_3_1")
g4.2 <- ggplot(df, aes(x = ELG_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Symm_3_1")
g4.3 <- ggplot(df, aes(x = EW_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Symm_3_1")
figure.4 <- ggarrange(g4.1, g4.2, g4.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.4
# Equilibrium effort: .25v
g5.1 <- ggplot(df, aes(x = EDG_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Gerry_A")
g5.2 <- ggplot(df, aes(x = ELG_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Gerry_A")
g5.3 <- ggplot(df, aes(x = EW_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Gerry_A")
figure.5 <- ggarrange(g5.1, g5.2, g5.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.5
stage_2 <- df %>% subset(Period > 24 & Period < 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
library(raster)
mode_df <- stage_2 %>% group_by(subject.id, Player) %>%
summarise(mode.map = modal(Map_Selection, ties = 'random'))
mode_df.v1 <- mode_df %>%
mutate(renamed.mode.map = ifelse(mode.map==1, "Gerry_B",
ifelse(mode.map==2, "Symm_1_1",
ifelse(mode.map==3, "Symm_1_3",
ifelse(mode.map==4, "Symm_3_1", "Gerry_A")))))
map_mode_bar <- ggplot(mode_df.v1, aes(x=renamed.mode.map, fill = Player, color = Player)) +
geom_bar(width = 0.5, alpha = 0.5, position="identity")
map_mode_bar + ggtitle("Modal Map Selection in Stage 2")
# map_mode_hist <- ggplot(mode_df, aes(x=mode.map, fill = Player, color = Player)) +
#   geom_histogram(alpha = 0.5, position="identity")
# map_mode_hist
# sum(mode_df$mode.map == 1)
# Create "last_period" as an empty vector and extract period 28 from each sessions
last_period <- subset(df, Period=="28")
last_period$Map_Selection <- as.character(last_period$Map_Selection)
last_period$Bug <- ifelse(last_period$Player == last_period$LType, "No", "Yes")
last_period.v1 <- last_period %>%
mutate(renamed.map.selection = ifelse(Map_Selection==1, "Gerry_B",
ifelse(Map_Selection==2, "Symm_1_1",
ifelse(Map_Selection==3, "Symm_1_3",
ifelse(Map_Selection==4, "Symm_3_1", "Gerry_A")))))
# Adding filter here to remove the guy who left the session while choosing a map
last_period.v1 %>% filter(renamed.map.selection != "-99") %>%
ggplot(aes(x=renamed.map.selection)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
# Adding filter here to remove the guy who left the session while choosing a map
last_period.v1 %>% filter(renamed.map.selection != "-99") %>%
ggplot(aes(x=renamed.map.selection, fill = Player, color = Player)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
df_clean <- df_clean %>% mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
df_all_cdf <- df_clean %>% dplyr::select(Period, subject.id, Player, District, Map, Effort)
only.4 <- df_all_cdf %>% filter(Map == 4, District == c("EDG","ELG","EW")) # %>% group_by(subject.id, District, Effort)
ggplot(only.4, aes(x = as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=District)) +
geom_vline(xintercept = 10, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Symm_3_1") + guides(size = F)
ggplot(df_all_cdf %>%
filter(Map == 4, District == c("EDG","ELG","EW")), aes(x = as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 10, linetype = "dashed") + xlim(0,80)+
facet_wrap(~District)+
ggtitle("Symm_3_1 by District") +
guides(size = F)
df_map_2 <- df_clean %>%
filter(Map == 2) %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort)
df_map_3 <- df_clean %>%
filter(Map == 3) %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort)
par(mfrow = c(1, 2))
# Bidding in Map 2 White District
ggplot(df_map_2 %>% filter(District == "EW"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
ggtitle("Symm_1_1: White District") +
guides(size = F)
# Bidding in Map 3 White District
ggplot(df_map_3 %>% filter(District == "EW"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 30, linetype = "dashed") + xlim(0,80)+
ggtitle("Symm_1_3: White District") +
guides(size = F)
dissag.df.overlay <- df_clean %>%
filter((Map == 1 | Map == 5) & District == "EW") %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv", "Dis.adv"))
par(mfrow = c(1, 2))
ggplot(dissag.df.overlay %>% filter(Advantage == "Adv"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
ggtitle("Advantage Comparrison: White District") + xlim(0,80)+
geom_vline(xintercept = 20, linetype = "dashed") +
guides(size = F)
ggplot(dissag.df.overlay %>% filter(Advantage == "Dis.adv"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
ggtitle("Disadvantage Comparrison: White District") + xlim(0,80)+
geom_vline(xintercept = 20, linetype = "dashed") +
guides(size = F)
ggplot(dissag.df.overlay, aes(x=as.numeric(Effort), size = "1")) +
scale_color_manual(values = c("black","green")) +
stat_ecdf(aes(colour=Advantage)) +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated: Advantaged vs Disadvantaged") +
guides(size = F) + scale_fill_brewer()
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(one.bids = ifelse((EDG_4 > 0 & ELG_4 == 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 == 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(all.three.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(all.zeros.bids = ifelse((EDG_4 == 0 & ELG_4 == 0 & EW_4 == 0),1,0))
summarize(map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
## Took way too long to figure this out (~2 hours)
# install.packages("matrixStats")
library("matrixStats")
map_four_bidding <- map_four_bidding %>%
mutate(districts.bid = ifelse(all.three.bids == 1, "Three", ifelse(two.bids == 1, "Two", ifelse(one.bids == 1, "One", "Zero"))),
max_bid = pmax(EDG_4, ELG_4, EW_4),
min_bid = pmin(EDG_4, ELG_4, EW_4),
median_bid = rowMedians(as.matrix(map_four_bidding[,c(5,6,7)])))
map_four_bidding <- map_four_bidding %>%
mutate(Spread = ifelse(all.three.bids == 1, max_bid - min_bid,
ifelse(two.bids == 1, max_bid - median_bid,
ifelse(one.bids == 1, max_bid - min_bid, -1))))
map_four_bidding$districts.bid <- factor(map_four_bidding$districts.bid,                 # Re-level group factor
levels = c("Zero", "One", "Two", "Three"))
ggplot(map_four_bidding, aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80) +
labs(title = "Unadjusted Spread",
subtitle = "Symm_3_1")
map_four_bidding %>% filter(districts.bid == c("Two","Three")) %>%
ggplot(aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80)+
facet_wrap(~districts.bid) +
labs(title = "Unadjusted Spread",
subtitle = "Symm_3_1")
## Do the pcts and the graphs treating bids =< 5 as if they are 0
# Adjusted Spread (all bids < 5 setting equal to 0)
adjusted_map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
# Replace bids <= 5 with 0
adjusted_map_four_bidding[,5:7][adjusted_map_four_bidding[,5:7] <= 5 ] <- 0
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(one.bids = ifelse((EDG_4 > 0 & ELG_4 == 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 == 0 & EW_4 > 0),1,0))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(all.three.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 > 0),1,0))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>% mutate(all.zeros.bids = ifelse((EDG_4 == 0 & ELG_4 == 0 & EW_4 == 0),1,0))
summarize(adjusted_map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
adjusted_map_four_bidding <- adjusted_map_four_bidding %>%
mutate(districts.bid = ifelse(all.three.bids == 1, "Three", ifelse(two.bids == 1, "Two", ifelse(one.bids == 1, "One", "Zero"))),
max_bid = pmax(EDG_4, ELG_4, EW_4),
min_bid = pmin(EDG_4, ELG_4, EW_4),
median_bid = rowMedians(as.matrix(adjusted_map_four_bidding[,c(5,6,7)])))
adjusted_map_four_bidding <- adjusted_map_four_bidding %>%
mutate(Spread = ifelse(all.three.bids == 1, max_bid - min_bid,
ifelse(two.bids == 1, max_bid - median_bid,
ifelse(one.bids == 1, max_bid - min_bid, -1))))
adjusted_map_four_bidding$districts.bid <- factor(adjusted_map_four_bidding$districts.bid,         # Re-level group factor
levels = c("Zero", "One", "Two", "Three"))
ggplot(adjusted_map_four_bidding, aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80)+
labs(title = "Adjusted Spread",
subtitle = "Symm_3_1")
adjusted_map_four_bidding %>% filter(districts.bid == c("Two","Three")) %>%
ggplot(aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") + xlim(-2,80)+
facet_wrap(~districts.bid) +
labs(title = "Adjusted Spread",
subtitle = "Symm_3_1")
library("stats")
# These seem pretty sensitive, am I wrong?
# Map 4 Dark Grey
EDG4A <- subset(df_all_cdf, Map == 4 & District == "EDG" & Player == "A")[,"Effort"]
EDG4B <- subset(df_all_cdf, Map == 4 & District == "EDG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EDG4A)),as.numeric(unlist(EDG4B)))
# Map 4 Light Grey
ELG4A <- subset(df_all_cdf, Map == 4 & District == "ELG" & Player == "A")[,"Effort"]
ELG4B <- subset(df_all_cdf, Map == 4 & District == "ELG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ELG4A)),as.numeric(unlist(ELG4B)))
# Map 4 White
EW4A <- subset(df_all_cdf, Map == 4 & District == "EW" & Player == "A")[,"Effort"]
EW4B <- subset(df_all_cdf, Map == 4 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW4A)),as.numeric(unlist(EW4B)))
# Map 2 White
EW2A <- subset(df_all_cdf, Map == 2 & District == "EW" & Player == "A")[,"Effort"]
EW2B <- subset(df_all_cdf, Map == 2 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW2A)),as.numeric(unlist(EW2B)))
# Map 3 White
EW3A <- subset(df_all_cdf, Map == 3 & District == "EW" & Player == "A")[,"Effort"]
EW3B <- subset(df_all_cdf, Map == 3 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW3A)),as.numeric(unlist(EW3B)))
# Advantaged
ADV.A <- subset(dissag.df.overlay, Advantage == "Adv" & Player == "A")[,"Effort"]
ADV.B <- subset(dissag.df.overlay, Advantage == "Adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ADV.A)),as.numeric(unlist(ADV.B)))
# Disadvantaged
Dis.ADV.A <- subset(dissag.df.overlay, Advantage == "Dis.adv" & Player == "A")[,"Effort"]
Dis.ADV.B <- subset(dissag.df.overlay, Advantage == "Dis.adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(Dis.ADV.A)),as.numeric(unlist(Dis.ADV.B)))
# Adv vs Dis.adv
ADV.All <- subset(dissag.df.overlay, Advantage == "Adv")[,"Effort"]
Dis.ADV.All <- subset(dissag.df.overlay, Advantage == "Dis.adv")[,"Effort"]
ks.test(as.numeric(unlist(ADV.All)),as.numeric(unlist(Dis.ADV.All)))
# make each pair total an observation
# gotta pull in the pEDG, pELG, pEW metrics
# total effort by pair addition to data frame
df_pair_totals <- df %>% mutate(Pair_5 = EDG_5 + pEDG_5 + ELG_5 + pELG_5 + EW_5 + pEW_5,
Pair_4 = EDG_4 + pEDG_4 + ELG_4 + pELG_4 + EW_4 + pEW_4,
Pair_3 = EDG_3 + pEDG_3 + ELG_3 + pELG_3 + EW_3 + pEW_3,
Pair_2 = EDG_2 + pEDG_2 + ELG_2 + pELG_2 + EW_2 + pEW_2,
Pair_1 = EDG_1 + pEDG_1 + ELG_1 + pELG_1 + EW_1 + pEW_1)
df_pair_totals <- df_pair_totals %>% mutate(Partner_Player =
ifelse(Player == "B","A","B"))
long_pairs_df <- df_pair_totals %>%
dplyr::select(Session, Period, Subject, Player, Partner, Partner_Player, LType, Pair_5:Pair_1) %>%
gather(District, Pair_Effort, Pair_5:Pair_1)
cleaned_pairs <- long_pairs_df %>% separate(District, c("Pairs", "Map"))
cleaned_pairs <- cleaned_pairs %>%
mutate(renamed.map = ifelse(Map==1, "Gerry_B",
ifelse(Map==2, "Symm_1_1",
ifelse(Map==3, "Symm_1_3",
ifelse(Map==4, "Symm_3_1", "Gerry_A")))))
## only look at subject == c(1,2,3,4) since we'd repeat the other metrics
ggplot(cleaned_pairs %>%
filter(Subject == c(1,2,3,4)), aes(x = as.numeric(Pair_Effort), size = "1")) +
stat_ecdf(aes(colour = renamed.map)) +
xlim(0,80) +
ggtitle("Pair Total Bidding by Map") +
guides(size = F)
time_series_avg <- df_clean %>%
filter(((Map == 1 | Map == 5 | Map == 2 | Map == 3) & District == "EW")|(Map == 4)) %>%
dplyr::select(Session, Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Choice = ifelse(Advantage == "Adv", "Adv",
ifelse(Advantage == "Dis.adv", "Dis",
ifelse(Map == 3, "Symm_1_3 White",
ifelse(Map == 2, "Symm_1_1 White",
ifelse(Map == 4 & District == "EW", "Symm_3_1 EW",
ifelse(Map == 4 & District == "EDG", "Symm_3_1 EDG", "Symm_3_1 ELG")))))))
# Get averages for advantages in map 1 or 5, disadvantaged in map 1 or 5, white in map 2 or 3, and all districts in map 4
session.level.ts.avgs <- time_series_avg %>% filter(Period < 28, District == c("EW","EDG","ELG")) %>%
group_by(Session, Period, Choice) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
session.level.ts.avgs %>%
ggplot(aes(x=Period, y=avg.Effort)) +
geom_line(aes(color = as.character(Session))) + facet_wrap(~Choice) + xlim(15,27) + ylim(0,60) +
scale_x_continuous(breaks=c(15:27))
head(avg.bid.map.district)
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
# sum(mode_df$gerry)
pct.gerry <- sum(mode_df$gerry)/64
pct.gerry
# stage_2 <- stage_2 %>% mutate(gerry = ifelse((Player == 'A' & Map_Selection == 5)|(Player == 'B' & Map_Selection == 1),1,0))
# pct.gerry.2 <- sum(stage_2$gerry)/nrow(stage_2)
# pct.gerry.2
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- round((by_map_selection_count$n/sum(by_map_selection_count$n))*100, 0)
by_map_selection_count
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry) %>%
mutate(support_gerry = ifelse(PEQ_8 == 1, "Yes", "No"))
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
geom_histogram(aes(fill = as.character(support_gerry),color = as.character(support_gerry))) +
facet_wrap(~gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
geom_histogram(aes(fill = "PEQ_8", fill = "PEQ_8"))
nrow(subset(gerry_and_politics, PEQ_7 > 5))
nrow(subset(gerry_and_politics, PEQ_7 < 5))
sum(gerry_and_politics$gerry)/nrow(gerry_and_politics)
## TO MAKE
##### stacked figure: they do gerrymandering and they don't gerrymander
library(ggpubr)
rank_res_gerryied <- wilcox.test(PEQ_7 ~ as.character(gerry), data = gerry_and_politics,
exact = FALSE)
rank_res_gerryied
rank_res_support.gerry <- wilcox.test(PEQ_7 ~ support_gerry, data = gerry_and_politics,
exact = FALSE)
rank_res_support.gerry
rank_support.gerry_actually.gerry <- wilcox.test(PEQ_8 ~ as.character(gerry), data = gerry_and_politics, exact = FALSE)
rank_support.gerry_actually.gerry
# wilcox.test(gerry ~ support_gerry, data = gerry_and_politics, exact = FALSE)
nrow(subset(gerry_and_politics, PEQ_8 == 2 & gerry == 1))/nrow(subset(gerry_and_politics, PEQ_8 == 2))
gerry_and_politics <- gerry_and_politics %>%
mutate(support_gerry_numeric = ifelse(support_gerry == "No", 0, 1))
nrow(subset(gerry_and_politics, gerry == 1 & gerry_and_politics$support_gerry == "Yes"))/nrow(subset(gerry_and_politics, gerry == 1))
nrow(subset(gerry_and_politics, gerry == 0 & gerry_and_politics$support_gerry == "Yes"))/nrow(subset(gerry_and_politics, gerry == 0))
mode_df_with_end <- inner_join(mode_df,stage_3, copied = F) %>%
rename(final.map.choice = Map_Selection) %>%
mutate(spillover = ifelse(mode.map == final.map.choice & gerry == 1, "Spillover", "No Spillover"))
mode_df_with_end <- mode_df_with_end[!(mode_df_with_end$final.map.choice == -99),]
mode_df_with_end <- mode_df_with_end %>%
mutate(mode.map = ifelse(mode.map==1, "Gerry_B",
ifelse(mode.map==2, "Symm_1_1",
ifelse(mode.map==3, "Symm_1_3",
ifelse(mode.map==4, "Symm_3_1", "Gerry_A")))))
#combine maps 1 and 5. Only color maps based off if they are potential spillovers
mode_df_with_end <- mode_df_with_end %>%
mutate(adjusted.map.mode = ifelse(mode.map == 'Gerry_A' | mode.map == 'Gerry_B', "Gerry A or B", as.character(mode.map)),
adjusted.final.map.choice = ifelse(final.map.choice == '5' | final.map.choice == '1', "Gerry A or B", as.character(final.map.choice)))
map_mode_with_end_bar <-
ggplot(mode_df_with_end, aes(x=adjusted.final.map.choice, fill = spillover, color = spillover)) +
geom_bar(width = 0.5, alpha = 0.5, position="identity")
map_mode_with_end_bar + labs(title = "Map Choice in Final Period",
subtitle = "Spillover includes only those who actually gerrymandered and chose their previously advantaged map both in stage 2 and stage 3")
#long_df <- df %>% dplyr::select(Session, Period, Subject, Player, Partner, LType, EDG_5:EW_1, pEDG_5:pEW_1) #%>% gather(District, Effort, EDG_5:pEW_1)
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(Player_B = ifelse(Player== "B", 1, 0),
Map_1 = ifelse(Map == "TE_1", 1, 0),
Map_2 = ifelse(Map == "TE_2", 1, 0),
Map_3 = ifelse(Map == "TE_3", 1, 0),
Map_4 = ifelse(Map == "TE_4", 1, 0),
Map_5 = ifelse(Map == "TE_5", 1, 0))
#subject.id = Session*8-(8-Subject)
# want to use map 2 as baseline...?? Did we decide on this or not...
map.player.interaction <- lm(
Effort ~ Player_B + Map_1 + Map_1*Player_B + Map_3 + Map_3*Player_B + Map_4 + Map_4*Player_B
+ Map_5 + Map_5*Player_B,
data = regress_df
)
summary(map.player.interaction)
# Does average bid in each map change as a result of the period?
# Does average bid in each district change as a result of the period?
period.averages <- regress_df %>%
filter(Period < 28) %>%
dplyr::select(Period, Map, Effort) %>%
group_by(Period, Map) %>% summarise(avg.effort = mean(as.numeric(Effort))) %>%
mutate(Selection_Stage = ifelse(Period > 24, 1, 0))
ms.on.effort <- lm(avg.effort ~ Selection_Stage, data = period.averages)
summary(ms.on.effort)
mode_df_with_end <- inner_join(mode_df,stage_3, copied = F) %>%
rename(final.map.choice = Map_Selection) %>%
mutate(spillover = ifelse(mode.map == final.map.choice & gerry == 1, "Spillover", "No Spillover"))
mode_df_with_end <- mode_df_with_end[!(mode_df_with_end$final.map.choice == -99),]
mode_df_with_end <- mode_df_with_end %>%
mutate(final.map.choice = ifelse(final.map.choice==1, "Gerry_B",
ifelse(final.map.choice==2, "Symm_1_1",
ifelse(final.map.choice==3, "Symm_1_3",
ifelse(final.map.choice==4, "Symm_3_1", "Gerry_A")))))
mode_df_with_end <- mode_df_with_end %>%
mutate(mode.map = ifelse(mode.map==1, "Gerry_B",
ifelse(mode.map==2, "Symm_1_1",
ifelse(mode.map==3, "Symm_1_3",
ifelse(mode.map==4, "Symm_3_1", "Gerry_A")))))
#combine maps 1 and 5. Only color maps based off if they are potential spillovers
mode_df_with_end <- mode_df_with_end %>%
mutate(adjusted.map.mode = ifelse(mode.map == 'Gerry_A' | mode.map == 'Gerry_B', "Gerry A or B", as.character(mode.map)),
adjusted.final.map.choice =
ifelse(final.map.choice == "Gerry_A" | final.map.choice == "Gerry_B", "Gerry A or B", as.character(final.map.choice)))
map_mode_with_end_bar <-
ggplot(mode_df_with_end, aes(x=adjusted.final.map.choice, fill = spillover, color = spillover)) +
geom_bar(width = 0.5, alpha = 0.5, position="identity")
map_mode_with_end_bar + labs(title = "Map Choice in Final Period",
subtitle = "Spillover includes only those who actually gerrymandered and chose their previously advantaged map both in stage 2 and stage 3")
