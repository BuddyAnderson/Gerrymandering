}
seller_vec <- matrix("seller", nrow = num_sellers, ncol = 1)
seller_df  <- data.frame(seller_vec)
slati  <- c(2, 2, 7, 7)
slongi <- c(2, 7, 2, 7)
seller_df <- data.frame(seller_df, slati, slongi)
seller_df %<>%
mutate(sell_id = ifelse(slati == 2 & slongi == 7, 1,
ifelse(slati == 2 & slongi == 2, 2,
ifelse(slati == 7 & slongi == 7, 4, 3))))
seller_df$parking <- sample(1:3, size = num_sellers, replace = T)
seller_df$aesthetic <- sample(1:5, size = num_sellers, replace = T)
#400 width & 300 height
seller_df %>%
ggplot(aes(x = slati, y = slongi, color = as.factor(sell_id))) +
geom_point(size = 8) +
labs(color = "Neighborhood Seller") +
xlim(0,8) +
ylim(0,8) +
ylab("Longitude") +
xlab("Latitude") +
theme_bw() +
theme(legend.position = "none")
buyer_df %<>%
mutate(Income = ifelse(buyer_hood == 4, "Low",
ifelse(buyer_hood %in% c(1,2), "Middle", "High")))
buyer_df %>%
ggplot(aes(x = lati, y = longi)) +
geom_point(size = 4, aes(color = as.factor(Income))) +
scale_colour_grey() +
labs(color = 'Income') +
xlim(0,8) +
ylim(0,8) +
theme_bw() +
ylab("Longitude") +
xlab("Latitude")
buyer_df %>%
ggplot(aes(x = lati, y = longi, color = as.factor(buyer_hood))) +
geom_point(size = 4) +
labs(color = 'Neighborhood') +
xlim(0,8) +
ylim(0,8) +
ylab("Longitude") +
xlab("Latitude") +
theme_bw()
##-- distance parameter for different neighborhoods:
# 1 = 1/10 middle
# 2 = 1/10 middle
# 3 = 1/100 high
# 4 = 1/5 low when untreated; 1/50 when treated
utility_fnc <- function(period, buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic){
#u <- buyer_fe + (1/100)*(parking + aesthetic) - price - (distance/10)
if(period >= time_of_change){
if(buyer_hood == 1){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.1)
}else if(buyer_hood == 2){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.03)
}else if(buyer_hood == 3){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.01)
}else if(buyer_hood == 4){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.02)
}
}else if(period < time_of_change){
if(buyer_hood == 1){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.1)
}else if(buyer_hood == 2){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.03)
}else if(buyer_hood == 3){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.01)
}else if(buyer_hood == 4){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.2)
}
}
return(round(u, 2))
}
for(t in 1:2){
##-- make price vector for first and second period of sim
temp_seller_df <- seller_df
temp_seller_df$price <- round(rtruncnorm(num_sellers, a = 0, b = Inf, mean = 5, sd = 0.1), 2)
base_df <- merge(buyer_df, temp_seller_df)
base_df %<>% mutate(period = t)
base_df %<>% rowwise() %>%
mutate(distance = round(sqrt((lati - slati)^2 + (longi - slongi)^2),2),
origin = ifelse(buyer_hood == sell_id, 1, 0),
buyer_surplus = utility_fnc(period, buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic))
base_df %<>% mutate(purchased = 0,
closest_store = 0)
for(b in buyer_id){
store_options <- subset(base_df, buyer_id == b)
closest_store <- store_options$sell_id[store_options$distance == min(store_options$distance)]
store_of_purchase <- store_options$sell_id[store_options$buyer_surplus == max(store_options$buyer_surplus) &
max(store_options$buyer_surplus) >= 0]
base_df$closest_store[base_df$buyer_id == b & base_df$sell_id == closest_store] <- 1
base_df$purchased[base_df$buyer_id == b & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_one[base_df$buyer_id == b & base_df$buyer_hood == 1 & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_two[base_df$buyer_id == b & base_df$buyer_hood == 2 & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_three[base_df$buyer_id == b & base_df$buyer_hood == 3 & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_four[base_df$buyer_id == b & base_df$buyer_hood == 4 & base_df$sell_id == store_of_purchase] <- 1
}
full_df <- rbind(full_df, base_df)
}
revenue_df <- full_df %>%
select(period, sell_id, price, purchased) %>%
group_by(period, sell_id, price) %>%
summarise(units_sold = sum(purchased),
pct_of_period_purchases = units_sold/n()) %>%
mutate(total_profit = (price - production_cost)*units_sold)
for(t in 3:sim_periods){
temp_seller_df <- seller_df
new_seller_price <- c()
for(s in 1:num_sellers){
eps <- 0.01 + round(rtruncnorm(1, a = -0.05, b = 0.05, mean = 0, sd = 0.001), 2)
noise <-
temp_seller_sales <- revenue_df %>% filter(sell_id == s)
last_profit <- temp_seller_sales$total_profit[temp_seller_sales$period == t - 1]
last_price <- temp_seller_sales$price[temp_seller_sales$period == t - 1]
last_num_units <- temp_seller_sales$units_sold[temp_seller_sales$period == t - 1]
last_last_profit <- temp_seller_sales$total_profit[temp_seller_sales$period == t - 2]
last_last_price <- temp_seller_sales$price[temp_seller_sales$period == t - 2]
last_last_num_units <- temp_seller_sales$units_sold[temp_seller_sales$period == t - 2]
if(last_profit > 0 & last_num_units > 0 & last_profit < last_last_profit){
p <- last_price - eps
}else if(last_profit > 0 & last_num_units > 0 & last_profit > last_last_profit){
p <- last_price + eps
}else if(last_profit == 0 & last_num_units > 0){
p <- last_price + eps
}else if(last_profit < 0 & last_price > 0){
p <- last_price - eps
}else if(last_profit < 0 & last_price <= 0){
p <- abs(last_price) + eps
}else if(last_num_units == 0){
p <- last_price - eps
}
if(p < 0){p <- 0}
new_seller_price <- c(new_seller_price, p)
}
temp_seller_df$price <- new_seller_price
base_df <- merge(buyer_df, temp_seller_df)
base_df %<>% mutate(period = t)
##---------------------------------------------------------------
##                 Determine Utility for Buyer                 --
##---------------------------------------------------------------
base_df %<>% rowwise() %>%
mutate(distance = sqrt((lati - slati)^2 + (longi - slongi)^2),
origin = ifelse(buyer_hood == sell_id, 1, 0),
buyer_surplus = utility_fnc(period, buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic))
base_df %<>% mutate(purchased = 0)
for(b in buyer_id){
store_options <- subset(base_df, buyer_id == b)
closest_store <- store_options$sell_id[store_options$distance == min(store_options$distance)]
base_df$closest_store[base_df$buyer_id == b & base_df$sell_id == closest_store] <- 1
store_of_purchase <- store_options$sell_id[store_options$buyer_surplus == max(store_options$buyer_surplus)]
base_df$purchased[base_df$buyer_id == b & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_one[base_df$buyer_id == b & base_df$buyer_hood == 1 & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_two[base_df$buyer_id == b & base_df$buyer_hood == 2 & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_three[base_df$buyer_id == b & base_df$buyer_hood == 3 & base_df$sell_id == store_of_purchase] <- 1
base_df$purchased_from_four[base_df$buyer_id == b & base_df$buyer_hood == 4 & base_df$sell_id == store_of_purchase] <- 1
}
full_df <- rbind(full_df, base_df)
revenue_df <- full_df %>%
select(period, sell_id, price, purchased,
purchased_from_one, purchased_from_two, purchased_from_three, purchased_from_four) %>%
group_by(period, sell_id, price) %>%
summarise(units_sold = sum(purchased),
sold_to_one = sum(purchased_from_one),
sold_to_two = sum(purchased_from_two),
sold_to_three = sum(purchased_from_three),
sold_to_four = sum(purchased_from_four),
pct_of_period_purchases = units_sold/n()) %>%
mutate(total_profit = (price - production_cost)*units_sold)
}
revenue_df %<>% mutate(total_rev = price*units_sold)
early_revenue_df <- revenue_df %>% filter(period < time_of_change)
early_mean_price_paid_by_buyers <- sum(early_revenue_df$total_rev)/sum(early_revenue_df$units_sold)
revenue_df %>%
ggplot(aes(x = period, y = total_profit, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Seller Neighborhood') +
ylab("Total Profit") +
theme(legend.position = "none")
revenue_df %>%
ggplot(aes(x = period, y = pct_of_period_purchases, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.01) +
labs(color = 'Seller Neighborhood') +
ylab("Percent of Buyers (excluding non-purchasers)")
revenue_df %>%
ggplot(aes(x = period, y = price, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.005) +
labs(color = 'Seller Neighborhood') +
ylab("Price Charged")
full_df %<>% replace(is.na(.), 0)
revenue_df <- full_df %>%
select(period, sell_id, price, purchased,
purchased_from_one, purchased_from_two, purchased_from_three, purchased_from_four) %>%
group_by(period, sell_id, price) %>%
summarise(units_sold = sum(purchased),
sold_to_one = sum(purchased_from_one),
sold_to_two = sum(purchased_from_two),
sold_to_three = sum(purchased_from_three),
sold_to_four = sum(purchased_from_four),
pct_of_period_purchases = units_sold/n()) %>%
mutate(total_profit = (price - production_cost)*units_sold)
revenue_df %>%
gather(buyer_origin, units_to_buyer, sold_to_one:sold_to_four) %>%
ggplot(aes(x = period, y = units_to_buyer, color = buyer_origin)) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Selling to Buyer from...') +
ylab("Units Sold to Buyers") +
facet_wrap(~sell_id)
temp <- full_df %>%
filter(period < time_of_change)
model_one <- lm(purchased ~ period + origin + price + distance*as.factor(buyer_hood), data = temp)
stargazer(model_one, header = F, type = "latex")
# temp <- full_df %>%
#   mutate(origin_hood_purchase = ifelse(buyer_hood == sell_id & purchased == 1, 1, 0),
#          post_intervention = ifelse(period >= time_of_change, 1, 0))
# model_two <- lm(purchased ~ period + origin_hood_purchase + price + distance*post_intervention*as.factor(buyer_hood), data = temp)
# stargazer(model_two, header = F, type = 'latex')
formula <- as.formula("purchased ~ buyer_inc + origin + price + distance*as.factor(buyer_hood)")
model_one_fe <- lm_robust(formula = formula,
data = temp,
fixed_effect = ~buyer_hood,
se_type = "stata")
texreg(model_one_fe, include.ci = FALSE)
temp_2 <- full_df %>%
filter(period > time_of_change)
formula_2 <- as.formula("purchased ~ buyer_inc + origin + price + distance*as.factor(buyer_hood)")
model_two_fe <- lm_robust(formula = formula_2,
data = temp_2,
fixed_effect = ~buyer_hood,
se_type = "stata")
texreg(model_two_fe, include.ci = FALSE)
df_before_change <- full_df %>%
filter(period < time_of_change)
utility_fnc_two <- function(buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic){
if(buyer_hood == 1){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.1)
}else if(buyer_hood == 2){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.03)
}else if(buyer_hood == 3){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.01)
}else if(buyer_hood == 4){
u <- buyer_inc + 0.05*origin - price - (distance)*(0.02)
}
return(round(u, 2))
}
df_before_change %<>%
rowwise() %>%
mutate(buyer_surplus_two = utility_fnc_two(buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic))
df_before_change %<>% mutate(purchased_predicted = 0,
closest_store = 0,
purchased_from_one_predicted = 0,
purchased_from_two_predicted = 0,
purchased_from_three_predicted = 0,
purchased_from_four_predicted = 0)
tmp <- df_before_change %>%
select(buyer_id, sell_id, period, buyer_surplus_two)
tmp %<>% spread(tmp,
key = sell_id,
value = buyer_surplus_two)
colnames(tmp) <- c("buyer_id", "period", "seller_1", "seller_2", "seller_3", "seller_4")
to_join_with_full <- tmp %>%
rownames_to_column('id') %>%
left_join(
tmp %>%
rownames_to_column('id') %>%
gather(max_seller, max_surplus, "seller_1":"seller_4") %>%
group_by(id) %>%
slice(which.max(max_surplus)),
by = 'id'
)
to_join_with_full %<>%
select(buyer_id.x, period.x, max_seller)
colnames(to_join_with_full) <- c("buyer_id", "period", "max_seller")
test_join <- df_before_change %>%
right_join(to_join_with_full, by = c("buyer_id", "period"))
test_join %<>%
mutate(purchased_from_one_predicted = ifelse(max_seller == "seller_1" & sell_id == 1 & buyer_surplus_two > 0, 1, 0),
purchased_from_two_predicted = ifelse(max_seller == "seller_2" & sell_id == 2 & buyer_surplus_two > 0, 1, 0),
purchased_from_three_predicted = ifelse(max_seller == "seller_3" & sell_id == 3 & buyer_surplus_two > 0, 1, 0),
purchased_from_four_predicted = ifelse(max_seller == "seller_4" & sell_id == 4 & buyer_surplus_two > 0, 1, 0))
test_join %<>%
rowwise() %>%
mutate(purchased_predicted = (purchased_from_one_predicted + purchased_from_two_predicted + purchased_from_three_predicted + purchased_from_four_predicted))
early_mean_price_paid_by_buyers
predicted_revenue_df <- test_join %>%
select(period, sell_id, price, purchased_predicted,
purchased_from_one_predicted,
purchased_from_two_predicted,
purchased_from_three_predicted,
purchased_from_four_predicted) %>%
group_by(period, sell_id, price) %>%
summarise(units_sold = sum(purchased_predicted),
sold_to_one = sum(purchased_from_one_predicted),
sold_to_two = sum(purchased_from_two_predicted),
sold_to_three = sum(purchased_from_three_predicted),
sold_to_four = sum(purchased_from_four_predicted),
pct_of_period_purchases = units_sold/n()) %>%
mutate(total_profit = (price - production_cost)*units_sold,
total_rev = price*units_sold)
early_mean_price_paid_by_buyers_predicted <- sum(predicted_revenue_df$total_rev)/sum(predicted_revenue_df$units_sold)
early_mean_price_paid_by_buyers_predicted
revenue_df %>%
ggplot(aes(x = period, y = total_profit, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Seller Neighborhood') +
ylab("Total Profit") +
theme(legend.position = "none") +
ylim(0,100) +
xlim(0,150)
revenue_df %>%
ggplot(aes(x = period, y = pct_of_period_purchases, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.01) +
labs(color = 'Seller Neighborhood') +
ylab("Percent of Buyers (excluding non-purchasers)")+
xlim(0,150)
revenue_df %>%
ggplot(aes(x = period, y = price, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.005) +
labs(color = 'Seller Neighborhood') +
ylab("Price Charged") +
xlim(0,150)
predicted_revenue_df %>%
ggplot(aes(x = period, y = total_profit, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Seller Neighborhood') +
ylab("Total Profit") +
theme(legend.position = "none") +
ylim(0,100) +
xlim(0,150)
predicted_revenue_df %>%
ggplot(aes(x = period, y = pct_of_period_purchases, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.01) +
labs(color = 'Seller Neighborhood') +
ylab("Percent of Buyers (excluding non-purchasers)") +
xlim(0,150)
df_before_change <- full_df %>%
filter(period < time_of_change)
utility_fnc_two <- function(buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic){
if(buyer_hood == 1){
u <- 0*buyer_inc + 0.88*origin - 0.27*price - (distance)*(0.02)
}else if(buyer_hood == 2){
u <- 0*buyer_inc + 0.88*origin - 0.27*price - (distance)*(0.01)
}else if(buyer_hood == 3){
u <- 0*buyer_inc + 0.88*origin - 0.27*price - (distance)*(0.02)
}else if(buyer_hood == 4){
u <- 0*buyer_inc + 0.88*origin - 0.27*price - (distance)*(0.02)
}
return(round(u, 2))
}
df_before_change %<>%
rowwise() %>%
mutate(buyer_surplus_two = utility_fnc_two(buyer_hood, origin, distance, buyer_inc, price, parking, aesthetic))
df_before_change %<>% mutate(purchased_predicted = 0,
closest_store = 0,
purchased_from_one_predicted = 0,
purchased_from_two_predicted = 0,
purchased_from_three_predicted = 0,
purchased_from_four_predicted = 0)
tmp <- df_before_change %>%
select(buyer_id, sell_id, period, buyer_surplus_two)
tmp %<>% spread(tmp,
key = sell_id,
value = buyer_surplus_two)
colnames(tmp) <- c("buyer_id", "period", "seller_1", "seller_2", "seller_3", "seller_4")
to_join_with_full <- tmp %>%
rownames_to_column('id') %>%
left_join(
tmp %>%
rownames_to_column('id') %>%
gather(max_seller, max_surplus, "seller_1":"seller_4") %>%
group_by(id) %>%
slice(which.max(max_surplus)),
by = 'id'
)
to_join_with_full %<>%
select(buyer_id.x, period.x, max_seller)
colnames(to_join_with_full) <- c("buyer_id", "period", "max_seller")
test_join <- df_before_change %>%
right_join(to_join_with_full, by = c("buyer_id", "period"))
test_join %<>%
mutate(purchased_from_one_predicted = ifelse(max_seller == "seller_1" & sell_id == 1 & buyer_surplus_two > 0, 1, 0),
purchased_from_two_predicted = ifelse(max_seller == "seller_2" & sell_id == 2 & buyer_surplus_two > 0, 1, 0),
purchased_from_three_predicted = ifelse(max_seller == "seller_3" & sell_id == 3 & buyer_surplus_two > 0, 1, 0),
purchased_from_four_predicted = ifelse(max_seller == "seller_4" & sell_id == 4 & buyer_surplus_two > 0, 1, 0))
test_join %<>%
rowwise() %>%
mutate(purchased_predicted = (purchased_from_one_predicted + purchased_from_two_predicted + purchased_from_three_predicted + purchased_from_four_predicted))
early_mean_price_paid_by_buyers
predicted_revenue_df <- test_join %>%
select(period, sell_id, price, purchased_predicted,
purchased_from_one_predicted,
purchased_from_two_predicted,
purchased_from_three_predicted,
purchased_from_four_predicted) %>%
group_by(period, sell_id, price) %>%
summarise(units_sold = sum(purchased_predicted),
sold_to_one = sum(purchased_from_one_predicted),
sold_to_two = sum(purchased_from_two_predicted),
sold_to_three = sum(purchased_from_three_predicted),
sold_to_four = sum(purchased_from_four_predicted),
pct_of_period_purchases = units_sold/n()) %>%
mutate(total_profit = (price - production_cost)*units_sold,
total_rev = price*units_sold)
early_mean_price_paid_by_buyers_predicted <- sum(predicted_revenue_df$total_rev)/sum(predicted_revenue_df$units_sold)
early_mean_price_paid_by_buyers_predicted
revenue_df %>%
ggplot(aes(x = period, y = total_profit, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Seller Neighborhood') +
ylab("Total Profit") +
theme(legend.position = "none") +
ylim(0,100) +
xlim(0,150)
revenue_df %>%
ggplot(aes(x = period, y = pct_of_period_purchases, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.01) +
labs(color = 'Seller Neighborhood') +
ylab("Percent of Buyers (excluding non-purchasers)")+
xlim(0,150)
revenue_df %>%
ggplot(aes(x = period, y = price, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.005) +
labs(color = 'Seller Neighborhood') +
ylab("Price Charged") +
xlim(0,150)
predicted_revenue_df %>%
ggplot(aes(x = period, y = total_profit, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Seller Neighborhood') +
ylab("Total Profit") +
theme(legend.position = "none") +
ylim(0,100) +
xlim(0,150)
predicted_revenue_df %>%
ggplot(aes(x = period, y = pct_of_period_purchases, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.01) +
labs(color = 'Seller Neighborhood') +
ylab("Percent of Buyers (excluding non-purchasers)") +
xlim(0,150)
temp <- full_df %>%
filter(period < time_of_change)
model_one <- lm(purchased ~ period + origin + price + distance*as.factor(buyer_hood), data = temp)
stargazer(model_one, header = F, type = "latex")
# temp <- full_df %>%
#   mutate(origin_hood_purchase = ifelse(buyer_hood == sell_id & purchased == 1, 1, 0),
#          post_intervention = ifelse(period >= time_of_change, 1, 0))
# model_two <- lm(purchased ~ period + origin_hood_purchase + price + distance*post_intervention*as.factor(buyer_hood), data = temp)
# stargazer(model_two, header = F, type = 'latex')
formula <- as.formula("purchased ~ sell_id + buyer_inc + origin + price + distance*as.factor(buyer_hood)")
model_one_fe <- lm_robust(formula = formula,
data = temp,
fixed_effect = ~buyer_hood,
se_type = "stata")
texreg(model_one_fe, include.ci = FALSE)
temp_2 <- full_df %>%
filter(period > time_of_change)
formula_2 <- as.formula("purchased ~ buyer_inc + origin + price + distance*as.factor(buyer_hood)")
model_two_fe <- lm_robust(formula = formula_2,
data = temp_2,
fixed_effect = ~buyer_hood,
se_type = "stata")
texreg(model_two_fe, include.ci = FALSE)
model_one_fe <- lm_robust(formula = formula,
data = temp,
fixed_effect = ~buyer_hood,
se_type = "stata")
texreg(model_one_fe, include.ci = FALSE)
formula <- as.formula("purchased ~ as.factor(sell_id) + buyer_inc + origin + price + distance*as.factor(buyer_hood)")
model_one_fe <- lm_robust(formula = formula,
data = temp,
fixed_effect = ~buyer_hood,
se_type = "stata")
texreg(model_one_fe, include.ci = FALSE)
seller_df %>%
ggplot(aes(x = slati, y = slongi, color = as.factor(sell_id))) +
geom_point(size = 8) +
labs(color = "Neighborhood Seller") +
xlim(0,8) +
ylim(0,8) +
ylab("Longitude") +
xlab("Latitude") +
theme_bw() +
theme(legend.position = "none")
revenue_df %>%
ggplot(aes(x = period, y = total_profit, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.5) +
labs(color = 'Seller Neighborhood') +
ylab("Total Profit") +
theme(legend.position = "none")
revenue_df %>%
ggplot(aes(x = period, y = price, color = as.factor(sell_id))) +
geom_point() +
geom_jitter(height = 0.005) +
labs(color = 'Seller Neighborhood') +
ylab("Price Charged")
source("~/Desktop/Miscelaneous/College_Gameday/College_Football_GDC/2022_Season/only_new_form_info.R", echo=TRUE)
