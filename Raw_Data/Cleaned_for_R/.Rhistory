df_clean <- long_df %>% separate(District, c("District", "Map"))
# get some interesting tables
avg.bid.map.district <- df_clean %>% group_by(Player, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.by.session <- df_clean %>% group_by(Session) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.session.map.district <- df_clean %>% group_by(Session, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
# recall: periods 15 - 24 are Stage 1, 25-27 are Stage 2, and 28 is Stage 3
avg.bid.by.period <- df_clean %>% group_by(Period, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
# Let's consider just the competitive districts
df_comp <- df_clean %>% subset(District == "EW" | (District==c("EDG","ELG") & Map == 4))
avg.bid.comp.dist <- df_comp %>% group_by(Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.comp.session <- df_comp %>% group_by(Session) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
avg.bid.comp.session.map.dist <- df_comp %>% group_by(Session, Map, District) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
##
# install.packages("ggpubr")
library(ggpubr)
theme_set(theme_pubr())
# Equilibrium effort: .25v
g1.1 <- ggplot(df, aes(x = EDG_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80) +
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 1")
g1.2 <- ggplot(df, aes(x = ELG_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80) +
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 1")
g1.3 <- ggplot(df, aes(x = EW_1)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 1")
figure <- ggarrange(g1.1, g1.2, g1.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
# Equilibrium effort: .25v
g2.1 <- ggplot(df, aes(x = EDG_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 2")
g2.2 <- ggplot(df, aes(x = ELG_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 2")
g2.3 <- ggplot(df, aes(x = EW_2)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 2")
figure.2 <- ggarrange(g2.1, g2.2, g2.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.2
# Equilibrium effort: 3/8 v
g3.1 <- ggplot(df, aes(x = EDG_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 3")
g3.2 <- ggplot(df, aes(x = ELG_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 3")
g3.3 <- ggplot(df, aes(x = EW_3)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 60, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 3")
figure.3 <- ggarrange(g3.1, g3.2, g3.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.3
# Equilibrium effort: .125v per district
g4.1 <- ggplot(df, aes(x = EDG_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 4")
g4.2 <- ggplot(df, aes(x = ELG_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 4")
g4.3 <- ggplot(df, aes(x = EW_4)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 4")
figure.4 <- ggarrange(g4.1, g4.2, g4.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.4
# Equilibrium effort: .25v
g5.1 <- ggplot(df, aes(x = EDG_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Dark Grey: Map 5")
g5.2 <- ggplot(df, aes(x = ELG_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 0, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in Light Grey: Map 5")
g5.3 <- ggplot(df, aes(x = EW_5)) +
stat_ecdf(geom = "step") +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Bids in White: Map 5")
figure.5 <- ggarrange(g5.1, g5.2, g5.3,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure.5
stage_2 <- df %>% subset(Period > 24 & Period < 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
library(raster)
mode_df <- stage_2 %>% group_by(subject.id, Player) %>%
summarise(mode.map = modal(Map_Selection, ties = 'random'))
map_mode_bar <- ggplot(mode_df, aes(x=mode.map, fill = Player, color = Player)) +
geom_bar(width = 0.5, alpha = 0.5, position="identity")
map_mode_bar + ggtitle("Modal Map Selection in Stage 2")
# map_mode_hist <- ggplot(mode_df, aes(x=mode.map, fill = Player, color = Player)) +
#   geom_histogram(alpha = 0.5, position="identity")
# map_mode_hist
# sum(mode_df$mode.map == 1)
# Create "last_period" as an empty vector and extract period 28 from each sessions
last_period <-subset(df, Period=="28")
last_period$Map_Selection <- as.factor(last_period$Map_Selection)
last_period$Bug <- ifelse(last_period$Player == last_period$LType, "No", "Yes")
ggplot(last_period, aes(x=Map_Selection)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
ggplot(last_period, aes(x=Map_Selection, fill = Player, color = Player)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
df_clean <- df_clean %>% mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
df_all_cdf <- df_clean %>% dplyr::select(Period, subject.id, Player, District, Map, Effort)
only.4 <- df_all_cdf %>% filter(Map == 4, District == c("EDG","ELG","EW")) # %>% group_by(subject.id, District, Effort)
ggplot(only.4, aes(x = as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=District)) +
geom_vline(xintercept = 10, linetype = "dashed") + xlim(0,80)+
facet_wrap(~Player) +
ggtitle("Map 4") + guides(size = F)
ggplot(df_all_cdf %>%
filter(Map == 4, District == c("EDG","ELG","EW")), aes(x = as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 10, linetype = "dashed") + xlim(0,80)+
facet_wrap(~District)+
ggtitle("Map 4 by District") +
guides(size = F)
df_map_2 <- df_clean %>%
filter(Map == 2) %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort)
df_map_3 <- df_clean %>%
filter(Map == 3) %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort)
par(mfrow = c(1, 2))
# Bidding in Map 2 White District
ggplot(df_map_2 %>% filter(District == "EW"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated Map 2: White District") +
guides(size = F)
# Bidding in Map 3 White District
ggplot(df_map_3 %>% filter(District == "EW"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
geom_vline(xintercept = 30, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated Map 3: White District") +
guides(size = F)
dissag.df.overlay <- df_clean %>%
filter((Map == 1 | Map == 5) & District == "EW") %>%
dplyr::select(Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv", "Dis.adv"))
par(mfrow = c(1, 2))
ggplot(dissag.df.overlay %>% filter(Advantage == "Adv"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
ggtitle("Advantage Comparrison: White District") + xlim(0,80)+
geom_vline(xintercept = 20, linetype = "dashed") +
guides(size = F)
ggplot(dissag.df.overlay %>% filter(Advantage == "Dis.adv"), aes(x=as.numeric(Effort), size = "1")) +
stat_ecdf(aes(colour=Player)) +
ggtitle("Disadvantage Comparrison: White District") + xlim(0,80)+
geom_vline(xintercept = 20, linetype = "dashed") +
guides(size = F)
ggplot(dissag.df.overlay, aes(x=as.numeric(Effort), size = "1")) +
scale_color_manual(values = c("black","green")) +
stat_ecdf(aes(colour=Advantage)) +
geom_vline(xintercept = 20, linetype = "dashed") + xlim(0,80)+
ggtitle("Disaggregated: Advantaged vs Disadvantaged") +
guides(size = F) + scale_fill_brewer()
map_four_bidding <- df %>% dplyr::select(Session, Period, Subject, Player, EDG_4, ELG_4, EW_4)
map_four_bidding <- map_four_bidding %>% mutate(two.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 > 0 & ELG_4 == 0 & EW_4 > 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(one.bids = ifelse((EDG_4 > 0 & ELG_4 == 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 > 0 & EW_4 == 0)|(EDG_4 == 0 & ELG_4 == 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(all.three.bids = ifelse((EDG_4 > 0 & ELG_4 > 0 & EW_4 > 0),1,0))
map_four_bidding <- map_four_bidding %>% mutate(all.zeros.bids = ifelse((EDG_4 == 0 & ELG_4 == 0 & EW_4 == 0),1,0))
summarize(map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
## Took way too long to figure this out (~2 hours)
# install.packages("matrixStats")
library("matrixStats")
map_four_bidding <- map_four_bidding %>%
mutate(districts.bid = ifelse(all.three.bids == 1, "Three", ifelse(two.bids == 1, "Two", ifelse(one.bids == 1, "One", "Zero"))),
max_bid = pmax(EDG_4, ELG_4, EW_4),
min_bid = pmin(EDG_4, ELG_4, EW_4),
median_bid = rowMedians(as.matrix(map_four_bidding[,c(5,6,7)])))
map_four_bidding <- map_four_bidding %>%
mutate(Spread = ifelse(all.three.bids == 1, max_bid - min_bid,
ifelse(two.bids == 1, max_bid - median_bid,
ifelse(one.bids == 1, max_bid - min_bid, -99))))
ggplot(map_four_bidding, aes(x=Spread, fill = districts.bid, color = districts.bid)) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
library("stats")
# These seem pretty sensitive, am I wrong?
# Map 4 Dark Grey
EDG4A <- subset(df_all_cdf, Map == 4 & District == "EDG" & Player == "A")[,"Effort"]
EDG4B <- subset(df_all_cdf, Map == 4 & District == "EDG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EDG4A)),as.numeric(unlist(EDG4B)))
# Map 4 Light Grey
ELG4A <- subset(df_all_cdf, Map == 4 & District == "ELG" & Player == "A")[,"Effort"]
ELG4B <- subset(df_all_cdf, Map == 4 & District == "ELG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ELG4A)),as.numeric(unlist(ELG4B)))
# Map 4 White
EW4A <- subset(df_all_cdf, Map == 4 & District == "EW" & Player == "A")[,"Effort"]
EW4B <- subset(df_all_cdf, Map == 4 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW4A)),as.numeric(unlist(EW4B)))
# Map 2 White
EW2A <- subset(df_all_cdf, Map == 2 & District == "EW" & Player == "A")[,"Effort"]
EW2B <- subset(df_all_cdf, Map == 2 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW2A)),as.numeric(unlist(EW2B)))
# Map 3 White
EW3A <- subset(df_all_cdf, Map == 3 & District == "EW" & Player == "A")[,"Effort"]
EW3B <- subset(df_all_cdf, Map == 3 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW3A)),as.numeric(unlist(EW3B)))
# Advantaged
ADV.A <- subset(dissag.df.overlay, Advantage == "Adv" & Player == "A")[,"Effort"]
ADV.B <- subset(dissag.df.overlay, Advantage == "Adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ADV.A)),as.numeric(unlist(ADV.B)))
# Disadvantaged
Dis.ADV.A <- subset(dissag.df.overlay, Advantage == "Dis.adv" & Player == "A")[,"Effort"]
Dis.ADV.B <- subset(dissag.df.overlay, Advantage == "Dis.adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(Dis.ADV.A)),as.numeric(unlist(Dis.ADV.B)))
# Adv vs Dis.adv
ADV.All <- subset(dissag.df.overlay, Advantage == "Adv")[,"Effort"]
Dis.ADV.All <- subset(dissag.df.overlay, Advantage == "Dis.adv")[,"Effort"]
ks.test(as.numeric(unlist(ADV.All)),as.numeric(unlist(Dis.ADV.All)))
# make each pair total an observation
# gotta pull in the pEDG, pELG, pEW metrics
# total effort by pair addition to data frame
df_pair_totals <- df %>% mutate(Pair_5 = EDG_5 + pEDG_5 + ELG_5 + pELG_5 + EW_5 + pEW_5,
Pair_4 = EDG_4 + pEDG_4 + ELG_4 + pELG_4 + EW_4 + pEW_4,
Pair_3 = EDG_3 + pEDG_3 + ELG_3 + pELG_3 + EW_3 + pEW_3,
Pair_2 = EDG_2 + pEDG_2 + ELG_2 + pELG_2 + EW_2 + pEW_2,
Pair_1 = EDG_1 + pEDG_1 + ELG_1 + pELG_1 + EW_1 + pEW_1)
df_pair_totals <- df_pair_totals %>% mutate(Partner_Player =
ifelse(Player == "B","A","B"))
long_pairs_df <- df_pair_totals %>%
dplyr::select(Session, Period, Subject, Player, Partner, Partner_Player, LType, Pair_5:Pair_1) %>%
gather(District, Pair_Effort, Pair_5:Pair_1)
cleaned_pairs <- long_pairs_df %>% separate(District, c("Pairs", "Map"))
## only look at subject == c(1,2,3,4) since we'd repeat the other metrics
ggplot(cleaned_pairs %>%
filter(Subject == c(1,2,3,4)), aes(x = as.numeric(Pair_Effort), size = "1")) +
stat_ecdf(aes(colour = Map)) +
xlim(0,80) +
ggtitle("Pair Total Bidding by Map") +
guides(size = F)
time_series_avg <- df_clean %>%
filter(((Map == 1 | Map == 5 | Map == 2 | Map == 3) & District == "EW")|(Map == 4)) %>%
dplyr::select(Session, Period, subject.id, Player, Map, District, Effort) %>%
mutate(Advantage = ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Choice = ifelse(Advantage == "Adv", "Adv",
ifelse(Advantage == "Dis.adv", "Dis",
ifelse(Map == 3, "3 White",
ifelse(Map == 2, "2 White",
ifelse(Map == 4 & District == "EW", "4 EW",
ifelse(Map == 4 & District == "EDG", "4 EDG", "4 ELG")))))))
# Get averages for advantages in map 1 or 5, disadvantaged in map 1 or 5, white in map 2 or 3, and all districts in map 4
session.level.ts.avgs <- time_series_avg %>% filter(Period < 28, District == c("EW","EDG","ELG")) %>%
group_by(Session, Period, Choice) %>% summarise(avg.Effort = mean(as.numeric(Effort)))
session.level.ts.avgs %>%
ggplot(aes(x=Period, y=avg.Effort)) +
geom_line(aes(color = as.character(Session))) + facet_wrap(~Choice) + xlim(15,27) + ylim(0,60) +
scale_x_continuous(breaks=c(15:27))
head(avg.bid.map.district)
mode_df$gerry <- ifelse((mode_df$Player == 'A' & mode_df$mode.map == 5)|(mode_df$Player == 'B' & mode_df$mode.map == 1),1,0)
# sum(mode_df$gerry)
pct.gerry <- sum(mode_df$gerry)/64
pct.gerry
# stage_2 <- stage_2 %>% mutate(gerry = ifelse((Player == 'A' & Map_Selection == 5)|(Player == 'B' & Map_Selection == 1),1,0))
# pct.gerry.2 <- sum(stage_2$gerry)/nrow(stage_2)
# pct.gerry.2
stage_3 <- df %>% subset(Period == 28) %>%
dplyr::select(Session, Subject, Period, Player, Map_Selection) %>%
mutate(subject.id = Session*8-(8-Subject))
by_map_selection_count <- stage_3 %>% group_by(Map_Selection) %>% tally()
by_map_selection_count$pct.of.pop <- round((by_map_selection_count$n/sum(by_map_selection_count$n))*100, 0)
by_map_selection_count
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
View(peq_response)
View(mode_df)
# and join to gerry table
gerry_and_politics <- inner_join(mode_df, peq_response)
View(gerry_and_politics)
# and join to gerry table
gerry_and_politics <- left_join(mode_df, peq_response)
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response)
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F)
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(subject.id)
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, gerry)
ggplot( gerry_and_politics,aes(x = PEQ_7, fill = "gerry", color = "gerry")) +
stat_count(width = 0.5, alpha = 0.5, position="identity")
ggplot( gerry_and_politics,aes(x = PEQ_7)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot( gerry_and_politics,aes(x = PEQ_7, color = PEQ_8)) +
stat_count(width = 0.5, alpha = 0.5, position="identity") +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot( gerry_and_politics,aes(x = PEQ_7, color = "PEQ_8")) +
stat_count(width = 0.5, alpha = 0.5, position="identity") +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot( gerry_and_politics,aes(x = PEQ_7, fill = "PEQ_8", color = "PEQ_8")) +
stat_count(width = 0.5, alpha = 0.5, position="identity") +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
stat_count(width = 0.5, alpha = 0.5, position="identity", color = "PEQ_8") +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
stat_count(width = 0.5, alpha = 0.5, position="identity", color = PEQ_8) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
stat_count(width = 0.5, alpha = 0.5, position="identity", fill = PEQ_8) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) + geom_histogram(width = 0.5, alpha = 0.5) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) + geom_histogram() +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7, color = PEQ_8)) + geom_histogram() +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7, fill = "PEQ_8")) + geom_histogram() +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) + geom_histogram(aes(color = "PEQ_8")) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) + geom_histogram(aes(color = as.character(PEQ_8))) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry)
ggplot(gerry_and_politics, aes(x = PEQ_7)) + geom_histogram(aes(fill = as.character(PEQ_8),color = as.character(PEQ_8))) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry) %>%
mutate(support_gerry = ifelse(PEQ_8 == 1, "Yes", "No"))
ggplot(gerry_and_politics, aes(x = PEQ_7)) + geom_histogram(aes(fill = as.character(PEQ_8),color = as.character(PEQ_8))) +
facet_wrap(~gerry)
# really just need response for each subject to include on the simplified data
# so just pull in their responses...
peq_response <- read_excel("PEQ_Responses.xlsx") %>%
dplyr::select(Session, Period, Subject,PEQ_7,TimeSubmitPEQ7OK, PEQ_8) %>%
mutate(subject.id = as.numeric(Session)*8-(8-as.numeric(Subject)))
# and join to gerry table
gerry_and_politics <- right_join(mode_df, peq_response, copied = F) %>%
dplyr::select(Session, subject.id, PEQ_7, PEQ_8, gerry) %>%
mutate(support_gerry = ifelse(PEQ_8 == 1, "Yes", "No"))
ggplot(gerry_and_politics, aes(x = PEQ_7)) +
geom_histogram(aes(fill = as.character(support_gerry),color = as.character(support_gerry))) +
facet_wrap(~gerry)
library(ggpubr)
library(ggpubr)
rank_res <- wilcox.test(as.character(gerry) ~ PEQ_7, data = gerry_and_politics,
exact = FALSE)
library(ggpubr)
rank_res <- wilcox.test(PEQ_7 ~ as.character(gerry), data = gerry_and_politics,
exact = FALSE)
rank_res
rank_res <- wilcox.test(PEQ_7 ~ support_gerry, data = gerry_and_politics,
exact = FALSE)
rank_res_support.gerry
library(ggpubr)
rank_res_gerryied <- wilcox.test(PEQ_7 ~ as.character(gerry), data = gerry_and_politics,
exact = FALSE)
rank_res_gerryied
rank_res_support.gerry <- wilcox.test(PEQ_7 ~ support_gerry, data = gerry_and_politics,
exact = FALSE)
rank_res_support.gerry
