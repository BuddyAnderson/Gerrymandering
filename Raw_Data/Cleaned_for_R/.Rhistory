Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
stage_2_impact <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Adv*Stage_2_indicator + Disadv*Stage_2_indicator + Symm_1_3*Stage_2_indicator + Symm_3_1*Stage_2_indicator,
data = regress_df
)
summary(stage_2_impact)
stargazer(stage_2_impact, title="Model 2 Regression Results", single.row = T)
regress_df2 <- regress_df %>% filter(Period < 25)
map_impact <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1,
data = regress_df2
)
stargazer(map_impact, title = "Effect of Map Configuration on Total Bid in Stage 1", single.row = T)
linearHypothesis(stage_2_impact, c("Symm_1_3 = 10"))
linearHypothesis(stage_2_impact, c("Symm_3_1 = 10"))
linearHypothesis(stage_2_impact, c("Symm_1_3 = Symm_3_1"))
linearHypothesis(stage_2_impact, c("Adv:Stage_2_indicator = 0", "Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0", "Symm_3_1:Stage_2_indicator = 0"))
linearHypothesis(map_impact, c("Adv" = "Disadv"))
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 20 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
map.player.interaction.adj <- lm(
Effort ~ Player_B + Gerry_B + Gerry_B*Player_B + Symm_1_3 + Symm_1_3*Player_B + Symm_3_1 + Symm_3_1*Player_B
+ Gerry_A + Gerry_A*Player_B,
data = regress_df
)
summary(map.player.interaction.adj)
stargazer(map.player.interaction, map.player.interaction.adj, title = "Model 1 Regression Results", column.labels = c("w/out learning", "w/ learning"), label = "Tab:regression_1", single.row = T)
#linearHypothesis(map.player.interaction, c("Map_5 + Player_B:Map_5 = 0"))
linearHypothesis(map.player.interaction.adj, c("Player_B + Player_B:Symm_1_3 = 0")) ## in sig at 5%
linearHypothesis(map.player.interaction.adj, c("Player_B + Player_B:Symm_3_1 = 0")) ## in sig at 5%
linearHypothesis(map.player.interaction.adj, c("Player_B + Player_B:Symm_1_3 = 0", "Player_B + Player_B:Symm_3_1 = 0", "Player_B = 0"))
linearHypothesis(map.player.interaction.adj, c("Player_B + Gerry_B + Player_B:Gerry_B = Gerry_A"))
linearHypothesis(map.player.interaction.adj, c("Player_B + Gerry_A + Player_B:Gerry_A = Gerry_B"))
linearHypothesis(map.player.interaction.adj, c(
"Player_B + Gerry_B + Player_B:Gerry_B = Gerry_A", "Player_B + Gerry_A + Player_B:Gerry_A = Gerry_B" ,"Player_B + Player_B:Symm_1_3 = 0", "Player_B + Player_B:Symm_3_1 = 0", "Player_B = 0")
)
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 20 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
map.adv.interaction.adj <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Period + Adv*Period + Disadv*Period + Symm_1_3*Period + Symm_3_1*Period,
data = regress_df
)
summary(map.adv.interaction.adj)
stargazer(map.adv.interaction, map.adv.interaction.adj, title = "Model 3 Regression Results", column.labels = c("w/out learning", "w/ learning"), label = "Tab:regression_3", single.row = T)
linearHypothesis(map.adv.interaction.adj, c("Symm_1_3 = 10"))
linearHypothesis(map.adv.interaction.adj, c("Symm_3_1 = 10")) # so map 4 is pushing expenditure up, but not as much as theory predicts
linearHypothesis(map.adv.interaction.adj, c("Symm_1_3 = Symm_3_1")) # map 4 has a larger effect than map 3 even though they're predicted to have the same effect (as shown by regression, but still worth testing)
linearHypothesis(map.adv.interaction.adj, c("Adv = Disadv"))
# testing on periods
linearHypothesis(map.adv.interaction.adj, c("Adv:Period = 0", "Disadv:Period = 0", "Symm_1_3:Period = 0", "Symm_3_1:Period = 0", "Period = 0"))
stage_1_regression_data <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 15 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
stage_1_regression_data <- stage_1_regression_data %>% mutate(subject.id = as.factor(Session*8-(8-Subject)),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0) # this is currently useless (all zeros)
)
stage_1_regression_data_with_learnng <- stage_1_regression_data %>% filter(Period >=20)
##########
map_impact_on_stage_1_no_learning <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1, data = stage_1_regression_data)
map_impact_on_stage_1_with_learning <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1, data = stage_1_regression_data_with_learnng)
########
# Look at subject Fixed Effects and standard errors clustered at session level
########
map_impact_on_stage_1_no_learning_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id, data = stage_1_regression_data)
map_impact_on_stage_1_with_learning_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id, data = stage_1_regression_data_with_learnng)
##########
#summary(map_impact_on_stage_1_no_learning)
#summary(map_impact_on_stage_1_with_learning)
#summary(map_impact_on_stage_1_no_learning_FE)
#summary(map_impact_on_stage_1_with_learning_FE)
#stargazer(map_impact_on_stage_1_no_learning, map_impact_on_stage_1_with_learning, title = "Map Impact on Stage 1 Bidding", column.labels = c("w/out learning", "w/ learning"), label = "Tab:stage_1_with_and_without_learning", single.row = T)
stargazer(map_impact_on_stage_1_no_learning_FE,
map_impact_on_stage_1_with_learning_FE,
title = "Map Impact on Stage 1 Bidding (FE and Clustereed SE)",
column.labels = c("w/out learning", "w/ learning"),
label = "Tab:stage_1_with_and_without_learning_FE_CSE",
omit = "subject.id", single.row = T)
# Must fill in clustered SE manually; can't figure out how to do this in Stargazer
map_impact_on_stage_1_no_learning_FE <-lm.cluster(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id, cluster = "Session", data = stage_1_regression_data)
summary(map_impact_on_stage_1_no_learning_FE)
#summary(reg,cluster = c("class_id"))
map_impact_on_stage_1_with_learning_FE <-lm.cluster(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id, cluster = "Session", data = stage_1_regression_data_with_learnng)
summary(map_impact_on_stage_1_with_learning_FE)
# Tests with NO LEARNING
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Adv = Disadv"))
#linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_1_3 = 0"))
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_1_3 = 10"))
#linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_3_1 = 0"))
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_3_1 = 10"))
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_1_3 = Symm_3_1"))
# Tests WITH LEARNING
linearHypothesis(map_impact_on_stage_1_with_learning, c("Adv = Disadv"))
#linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_1_3 = 0"))
linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_1_3 = 10"))
#linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_3_1 = 0"))
linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_3_1 = 10"))
linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_1_3 = Symm_3_1"))
## updating period to include stage 2 here
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period > 19 & Period <= 27) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = Session*8-(8-Subject),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
stage_2_impact.adj <- lm(
Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Adv*Stage_2_indicator + Disadv*Stage_2_indicator + Symm_1_3*Stage_2_indicator + Symm_3_1*Stage_2_indicator,
data = regress_df
)
summary(stage_2_impact.adj)
stargazer(stage_2_impact, stage_2_impact.adj, title = "Model 2 Regression Results", column.labels = c("w/out learning", "w/ learning"), label = "Tab:regression_2", single.row = T)
linearHypothesis(stage_2_impact.adj, c("Symm_1_3 = 10")) # can reject this
linearHypothesis(stage_2_impact.adj, c("Symm_3_1 = 10")) # can't reject this (marginally we can)
linearHypothesis(stage_2_impact.adj, c("Symm_3_1 = Symm_1_3")) # can safely reject they are the same
linearHypothesis(stage_2_impact.adj, c("Adv:Stage_2_indicator = 0", "Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0", "Symm_3_1:Stage_2_indicator = 0"))
summarize(map_four_bidding, n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
# compared to
summarize(subset(map_four_bidding, Period > 19), n.records = n(),
n.all.zeros = sum(all.zeros.bids),
n.one.district  = sum(one.bids),
n.two.districts = sum(two.bids),
n.three.districts = sum(all.three.bids),
pct.zeros = n.all.zeros/n.records,
pct.bid.one = n.one.district/n.records,
pct.bid.two = n.two.districts/n.records,
pct.bid.three = n.three.districts/n.records,
)
# the above have very little difference
# Map 4 Dark Grey
EDG4A <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EDG" & Player == "A")[,"Effort"]
EDG4B <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EDG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EDG4A)),as.numeric(unlist(EDG4B)))
# Map 4 Light Grey
ELG4A <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "ELG" & Player == "A")[,"Effort"]
ELG4B <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "ELG" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ELG4A)),as.numeric(unlist(ELG4B)))
# Map 4 White
EW4A <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EW" & Player == "A")[,"Effort"]
EW4B <- subset(df_all_cdf, Period > 19 & Map == 4 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW4A)),as.numeric(unlist(EW4B)))
# Map 2 White
EW2A <- subset(df_all_cdf, Period > 19 & Map == 2 & District == "EW" & Player == "A")[,"Effort"]
EW2B <- subset(df_all_cdf, Period > 19 & Map == 2 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW2A)),as.numeric(unlist(EW2B)))
# Map 3 White
EW3A <- subset(df_all_cdf, Period > 19 & Map == 3 & District == "EW" & Player == "A")[,"Effort"]
EW3B <- subset(df_all_cdf, Period > 19 &Map == 3 & District == "EW" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(EW3A)),as.numeric(unlist(EW3B)))
# Advantaged
ADV.A <- subset(dissag.df.overlay, Period > 19 & Advantage == "Adv" & Player == "A")[,"Effort"]
ADV.B <- subset(dissag.df.overlay, Period > 19 & Advantage == "Adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(ADV.A)),as.numeric(unlist(ADV.B)))
# Disadvantaged
Dis.ADV.A <- subset(dissag.df.overlay, Period > 19 & Advantage == "Dis.adv" & Player == "A")[,"Effort"]
Dis.ADV.B <- subset(dissag.df.overlay, Period > 19 & Advantage == "Dis.adv" & Player == "B")[,"Effort"]
ks.test(as.numeric(unlist(Dis.ADV.A)),as.numeric(unlist(Dis.ADV.B)))
# Adv vs Dis.adv
ADV.All <- subset(dissag.df.overlay, Period > 19 & Advantage == "Adv")[,"Effort"]
Dis.ADV.All <- subset(dissag.df.overlay, Period > 19 & Advantage == "Dis.adv")[,"Effort"]
ks.test(as.numeric(unlist(ADV.All)),as.numeric(unlist(Dis.ADV.All)))
## NOTE: check the Period filter for correctness when analyzing
stage_1.cond <- df %>% filter(Period <= 24 & Period >= 20) %>% dplyr::select(EDG_5:EW_1)
stage_1.cond[stage_1.cond == 0] <- NA
round(colMeans(stage_1.cond, na.rm = T), 2)
stage_1 <- df %>% filter(Period <= 24 & Period >= 20) %>% dplyr::select(EDG_5:EW_1)
round(colMeans(stage_1), 2)
no_partner_stats <- df_clean %>%
filter(Period <= 24 & Period >= 15 & !grepl("pE", District)) %>%
mutate(Fairness =
ifelse((Player == "A" & Map == 5)|(Player == "B" & Map == 1), "Adv",
ifelse((Player == "B" & Map == 5)|(Player == "A" & Map == 1),"Dis.adv", "fair")),
Map = ifelse(Map == 1 |Map == 5, "gerry", Map),
EffortWithNAs = ifelse(Effort == 0, NA, Effort))
#no_partner_stats$Effort[no_partner_stats$EffortWithNAs<=0] <- NA
pct.zero.dis.adv <- no_partner_stats %>%
group_by(District, Map, Fairness) %>%
summarize(pct.bid.zero = 100*round(sum(is.na(EffortWithNAs))/n(), 2),
avg.positive.bid = mean(EffortWithNAs, na.rm = T),
avg.bid          = mean(Effort))
pct.zero.dis.adv
pct.zero.dis.adv.stage.1 <- no_partner_stats %>%
filter(Period >= 15, Period <= 24) %>%
group_by(District, Map, Fairness) %>%
summarize(pct.bid.zero = 100*round(sum(is.na(EffortWithNAs))/n(), 2),
avg.positive.bid = mean(EffortWithNAs, na.rm = T),
avg.bid          = mean(Effort))
pct.zero.dis.adv.stage.1
pct.zero.dis.adv.w.learning <- no_partner_stats %>%
filter(Period >= 20, Period <= 24) %>%
group_by(District, Map, Fairness) %>%
summarize(pct.bid.zero = 100*round(sum(is.na(EffortWithNAs))/n(), 2),
avg.positive.bid = mean(EffortWithNAs, na.rm = T),
avg.bid          = mean(Effort))
pct.zero.dis.adv.w.learning
pct.zero <- long_df %>% filter(Period <= 24 & Period >= 15) %>%
group_by(District) %>% summarize(pct.bid.zero = round(sum(Effort == 0)/n(), 2))
pct.zero
## Likelihood of winning based on observed averages
win.prob.advantaged <- 1 - ((37)/(37+38))^2
win.prob.advantaged
regress_df <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 20 & Period <= 24) %>%
gather(Map, Effort, TE_1:TE_5)
regress_df <- regress_df %>% mutate(subject.id = as.character(Session*8-(8-Subject)),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
regress_df$Session <- as.character(regress_df$Session)
# Set the data up as a panel
d_panel <- pdata.frame(regress_df, index=c("subject.id"))
# Run the model_four
model_four <- plm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1, data=regress_df, index = "subject.id", effect = "individual")
summary(model_four, cluster = "Session")
linearHypothesis(model_four, c("Adv + Disadv = 0"))
linearHypothesis(model_four, c("Symm_1_3 + Symm_3_1 = 0"))
# model_four <- lm(
#   Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + subject.id,
#   data = regress_df
#   )
#
# summary(model_four, cluster = "Session")
stargazer(model_four, title = "Model 4 Regression Results", label = "Tab:regression_4", single.row = T)
new.stage.1 <- df %>%
filter(Period <= 24 & Period >= 20) %>%
dplyr::select(Session, Period, Subject, Player, TE_5,TE_1) %>%
gather(Map, Effort, TE_5:TE_1) %>%
mutate(advantage = ifelse((Player == "A" & Map == "TE_5")|(Player == "B" & Map == "TE_1"),"y","n"))
new.stage.1 %>%
group_by(advantage) %>%
summarise(avg.bid.by.gerry = mean(Effort))
pct.actually.win <- df %>%
filter(Period <= 24 & Period >= 15) %>%
dplyr::select(Session, Period, Player, Win1, Win5) %>%
gather(Map, Result, Win1:Win5) %>%
mutate(advantage = ifelse((Player == "A" & Map == "Win5")|(Player == "B" & Map == "Win1"),"y","n"))
adv.a.win.pct <- pct.actually.win %>%
filter(Map == "Win5", Player == "A") %>%
mutate(adv.win = ifelse(Result == 1, 1, 0))
adv.b.win.pct <- pct.actually.win %>%
filter(Map == "Win1", Player == "B") %>%
mutate(adv.win = ifelse(Result == 1, 1, 0))
pct.win <- rbind(adv.a.win.pct, adv.b.win.pct)
# sum(pct.win$adv.win)/nrow(pct.win)
stage_1to2_regression_data <- df %>% dplyr::select(Session, Period, Subject, Player, TE_1:TE_5) %>%
filter(Period >= 15 & Period <= 27) %>%
gather(Map, Effort, TE_1:TE_5)
stage_1to2_regression_data <- stage_1to2_regression_data %>% mutate(subject.id = as.factor(Session*8-(8-Subject)),
Player_B = ifelse(Player== "B", 1, 0),
Gerry_B = ifelse(Map == "TE_1", 1, 0),
Symm_1_1 = ifelse(Map == "TE_2", 1, 0),
Symm_1_3 = ifelse(Map == "TE_3", 1, 0),
Symm_3_1 = ifelse(Map == "TE_4", 1, 0),
Gerry_A = ifelse(Map == "TE_5", 1, 0),
Adv = ifelse((Map == "TE_1" & Player == "B")|(Map == "TE_5" & Player == "A"), 1,0),
Disadv = ifelse((Map == "TE_1" & Player == "A")|(Map == "TE_5" & Player == "B"), 1,0),
Stage_2_indicator = ifelse((Period > 24 & Period < 28), 1, 0))
##########
#map_impact_on_stage_1_no_learning <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1, data = stage_1_regression_data)
#map_impact_on_stage_1_with_learning <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1, data = stage_1_regression_data_with_learnng)
########
# Look at subject Fixed Effects and standard errors clustered at session level
########
map_impact_on_stage_1to2_no_learning_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Stage_2_indicator*Adv + Stage_2_indicator*Disadv + Stage_2_indicator*Symm_1_3 + Stage_2_indicator*Symm_3_1 + subject.id, data = stage_1to2_regression_data)
summary(map_impact_on_stage_1to2_no_learning_FE)
stage_1to2_regression_data_with_learning <- stage_1to2_regression_data %>% filter(Period >= 20)
map_impact_on_stage_1to2_with_learning_FE <-lm(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Stage_2_indicator*Adv + Stage_2_indicator*Disadv + Stage_2_indicator*Symm_1_3 + Stage_2_indicator*Symm_3_1 + subject.id, data = stage_1to2_regression_data_with_learning)
summary(map_impact_on_stage_1to2_with_learning_FE)
##########
#summary(map_impact_on_stage_1_no_learning)
#summary(map_impact_on_stage_1_with_learning)
#summary(map_impact_on_stage_1_no_learning_FE)
#summary(map_impact_on_stage_1_with_learning_FE)
#stargazer(map_impact_on_stage_1_no_learning, map_impact_on_stage_1_with_learning, title = "Map Impact on Stage 1 Bidding", column.labels = c("w/out learning", "w/ learning"), label = "Tab:stage_1_with_and_without_learning", single.row = T)
stargazer(map_impact_on_stage_1to2_no_learning_FE,
map_impact_on_stage_1to2_with_learning_FE,
title = "Map Impact with Stage 2 Indicator (FE and Clustereed SE)",
column.labels = c("w/out learning", "w/ learning"),
label = "Tab:stage_1to2_with_and_without_learning_FE_CSE",
omit = "subject.id", single.row = T)
# Must fill in clustered SE manually; can't figure out how to do this in Stargazer
map_impact_on_stage_1to2_no_learning_FE_cluster <- lm.cluster(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Stage_2_indicator*Adv + Stage_2_indicator*Disadv + Stage_2_indicator*Symm_1_3 + Stage_2_indicator*Symm_3_1 + subject.id, cluster = "Session", data = stage_1to2_regression_data)
summary(map_impact_on_stage_1to2_no_learning_FE_cluster)
#summary(reg,cluster = c("class_id"))
map_impact_on_stage_1to2_with_learning_FE_cluster <- lm.cluster(Effort ~ Adv + Disadv + Symm_1_3 + Symm_3_1 + Stage_2_indicator + Stage_2_indicator*Adv + Stage_2_indicator*Disadv + Stage_2_indicator*Symm_1_3 + Stage_2_indicator*Symm_3_1 + subject.id, cluster = "Session", data = stage_1to2_regression_data_with_learning)
summary(map_impact_on_stage_1to2_with_learning_FE_cluster)
# Tests with NO LEARNING
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Adv = Disadv"))
#linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_1_3 = 0"))
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_1_3 = 10"))
#linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_3_1 = 0"))
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_3_1 = 10"))
linearHypothesis(map_impact_on_stage_1_no_learning_FE, c("Symm_1_3 = Symm_3_1"))
# Simultaneous testing without learning
linearHypothesis(map_impact_on_stage_1to2_no_learning_FE, c("Adv:Stage_2_indicator = 0",
"Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0",
"Symm_3_1:Stage_2_indicator = 0"))
# Tests WITH LEARNING
linearHypothesis(map_impact_on_stage_1_with_learning, c("Adv = Disadv"))
#linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_1_3 = 0"))
linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_1_3 = 10"))
#linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_3_1 = 0"))
linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_3_1 = 10"))
linearHypothesis(map_impact_on_stage_1_with_learning, c("Symm_1_3 = Symm_3_1"))
# Simultaneous testing with learning
linearHypothesis(map_impact_on_stage_1to2_with_learning_FE, c("Adv:Stage_2_indicator = 0",
"Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0",
"Symm_3_1:Stage_2_indicator = 0"))
linearHypothesis(map_impact_on_stage_1to2_no_learning_FE_cluster, c("Adv:Stage_2_indicator = 0",
"Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0",
"Symm_3_1:Stage_2_indicator = 0"))
linearHypothesis(map_impact_on_stage_1to2_with_learning_FE_cluster, c("Adv:Stage_2_indicator = 0",
"Disadv:Stage_2_indicator = 0",
"Symm_1_3:Stage_2_indicator = 0",
"Symm_3_1:Stage_2_indicator = 0"))
xtable(adv_coef_cdfs)
xtable(disadv_coef_cdfs)
xtable(fair_coef_cdfs)
adv_coef_cdfs
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Gerry Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Gerry Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
if(c == "Gerry Advantaged"){
adv_coef_cdfs[c,i] <- temp_est
adv_coef_cdfs[c,i + "p-value"] <- temp_pvalue
}else if (c == "Gerry Disadvantaged"){
disadv_coef_cdfs[c,i] <- temp_est
}else{
fair_coef_cdfs[c,i] <- temp_est
}
}
}
adv_coef_cdfs[c,paste(i,"p-value",sep = "")] <- temp_pvalue
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Gerry Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Gerry Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
if(c == "Gerry Advantaged"){
adv_coef_cdfs[c,i] <- temp_est
adv_coef_cdfs[c,paste(i,"p-value",sep = "")] <- temp_pvalue
}else if (c == "Gerry Disadvantaged"){
disadv_coef_cdfs[c,i] <- temp_est
}else{
fair_coef_cdfs[c,i] <- temp_est
}
}
}
adv_coef_cdfs
View(adv_coef_cdfs)
Map <- c("Symm_1_1", "Symm_1_3", "Symm_3_1", "Gerry Advantaged", "Gerry Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Gerry Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Gerry Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
if(c == "Gerry Advantaged"){
adv_coef_cdfs[c,i] <- temp_est
adv_coef_cdfs[c,paste(i,"p-value",sep = " ")] <- temp_pvalue
}else if (c == "Gerry Disadvantaged"){
disadv_coef_cdfs[c,i] <- temp_est
disadv_coef_cdfs[c,paste(i,"p-value",sep = " ")] <- temp_pvalue
}else{
fair_coef_cdfs[c,i] <- temp_est
fair_coef_cdfs[c,paste(i,"p-value",sep = " ")] <- temp_pvalue
}
}
}
fair_coef_cdfs
View(fair_coef_cdfs)
View(disadv_coef_cdfs)
temp_summary
Map <- c("Symm_1_1", "Symm_1_3", "Symm_3_1", "Gerry Advantaged", "Gerry Disadvantaged")
adv_coef_cdfs <- data.frame()
disadv_coef_cdfs <- data.frame()
fair_coef_cdfs <- data.frame()
for(c in Map){
temp_df <- df_all_cdf %>%
filter(Renamed.Map == c) %>%
mutate(Compare = ifelse(Renamed.Map == "Gerry Advantaged", Adv.District.Names,
ifelse(Renamed.Map == "Gerry Disadvantaged", Disadv.District.Names,
District.compare))) %>%
dplyr::select(Renamed.Map,
Compare,
Effort,
Player
)
for(i in unique(temp_df$Compare)){
temp_model <- lm(Effort ~ Player, temp_df %>% filter(Compare == i))
temp_summary <- summary(temp_model)
temp_intercept <- temp_summary[["coefficients"]][1,1]
temp_intercept_pvalue <- temp_summary[["coefficients"]][1,4]
temp_est <- temp_summary[["coefficients"]][2,1]
temp_pvalue <- temp_summary[["coefficients"]][2,4]
if(c == "Gerry Advantaged"){
adv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
adv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
adv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
adv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
}else if (c == "Gerry Disadvantaged"){
disadv_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
disadv_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
disadv_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
disadv_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
}else{
fair_coef_cdfs[c,paste(i,"intercept",sep = " ")] <- temp_intercept
fair_coef_cdfs[c,paste(i,"intercept p-value",sep = " ")] <- temp_intercept_pvalue
fair_coef_cdfs[c,paste(i,"estimate",sep = " ")] <- temp_est
fair_coef_cdfs[c,paste(i,"estimate p-value",sep = " ")] <- temp_pvalue
}
}
}
